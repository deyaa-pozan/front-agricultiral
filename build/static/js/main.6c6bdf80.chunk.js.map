{"version":3,"sources":["assets/img/register_bg_2.png","assets/img/team-1-800x800.jpg","components/AdminNavbar.js","components/Sidebar.js","components/StatusCard.js","components/PageVisitsCard.js","components/TrafficCard.js","components/Analysis.js","api/axios.js","pages/dashboard/api.js","pages/dashboard/Dashboard.js","assets/img/team-2-800x800.jpg","assets/img/team-3-800x800.jpg","assets/img/team-4-470x470.png","components/Modal.js","pages/sensor/api.js","pages/sensor/TableCard.js","pages/sensor/Tables.js","pages/node/api.js","pages/node/FilterDate.js","pages/node/TableCard.js","pages/node/Tables.js","pages/user/api.js","pages/user/TableCard.js","pages/user/Tables.js","pages/Login.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","reportWebVitals.js","index.js","../node_modules/typescript/lib sync"],"names":["AdminNavbar","showSidebar","setShowSidebar","location","useLocation","pathname","className","color","buttonType","size","iconOnly","rounded","ripple","onClick","name","toUpperCase","replace","buttonText","src","style","padding","cookies","Cookies","Sidebar","useState","to","rel","exact","activeClassName","remove","window","reload","StatusCard","icon","title","amount","percentage","percentageColor","percentageIcon","date","PageVisitsCard","props","contentPosition","sensors","map","item","index","attribute1","TrafficCard","nodes","analysis","sensor","ScannedCount","Count","node","user","token","get","axios","create","baseURL","process","REACT_APP_API_BASE_URL_PRODUCTION","headers","getAnalysis","a","response","data","message","Dashboard","useQuery","keepPreviousData","isLoading","error","isFetching","Modal","class","setShowModal","type","fill","viewBox","xmlns","d","children","getSensors","addSensor","body","post","deleteSensor","sensorId","delete","CardTable","showModal","setSensor","x","y","enableBackground","version","xmlSpace","Items","GSI1PK","deleteElement","SK","onDelete","confirm","Form","setItem","changeAttr","attr","action","onSubmit","e","preventDefault","for","id","onChange","target","value","placeholder","split","nodeId","attribute2","attribute3","attribute4","attribute5","img","files","getAllNodes","addNode","deleteNode","addSensorforNode","put","getReadingsBetweenTwoDates","from","startDate","endDate","console","log","BETWEEN_TWO_DATES","App","Date","key","state","setState","setData","complate","setComplate","err","setErr","filter","length","selection","moveRangeOnFirstSelection","ranges","filename","background","backgroundColor","borderRadius","display","cursor","fontSize","fontWeight","textDecoration","textShadow","showModalDate","setShowModalDate","showModalSensor","setShowModalSensor","setNode","width","height","ScoreModale","fetchData","then","res","alt","getUsers","addUser","Authorization","accessToken","deleteUser","userId","addNodeforUser","setUser","email","checked","dfNode","countNodes","Login","React","handleSubmit","password","jwt","userData","set","path","catch","backgroundImage","require","default","backgroundSize","backgroundRepeat","htmlFor","transition","PrivateRoute","isAuthenticated","PublicRoute","isLogin","setIsLogin","isAuth","status","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById","webpackEmptyContext","req","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.6c6bdf80.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/register_bg_2.4f2cb0ac.png\";","export default __webpack_public_path__ + \"static/media/team-1-800x800.fa5a7ac2.jpg\";","import { useLocation } from 'react-router-dom';\r\nimport Button from '@material-tailwind/react/Button';\r\nimport Icon from '@material-tailwind/react/Icon';\r\nimport NavbarInput from '@material-tailwind/react/NavbarInput';\r\nimport Image from '@material-tailwind/react/Image';\r\nimport Dropdown from '@material-tailwind/react/Dropdown';\r\nimport DropdownItem from '@material-tailwind/react/DropdownItem';\r\nimport ProfilePicture from '../assets/img/team-1-800x800.jpg';\r\nimport React from 'react';\r\n\r\nexport default function AdminNavbar({ showSidebar, setShowSidebar }) {\r\n    const location = useLocation().pathname;\r\n\r\n    return (\r\n        <nav className=\"bg-light-blue-500 md:ml-64 py-6 px-3\">\r\n            <div className=\"container max-w-full mx-auto flex items-center justify-between md:pr-8 md:pl-10\">\r\n                <div className=\"md:hidden\">\r\n                    <Button\r\n                        color=\"transparent\"\r\n                        buttonType=\"link\"\r\n                        size=\"lg\"\r\n                        iconOnly\r\n                        rounded\r\n                        ripple=\"light\"\r\n                        onClick={() => setShowSidebar('left-0')}\r\n                    >\r\n                        <Icon name=\"menu\" size=\"2xl\" color=\"white\" />\r\n                    </Button>\r\n                    <div\r\n                        className={`absolute top-2 md:hidden ${\r\n                            showSidebar === 'left-0' ? 'left-64' : '-left-64'\r\n                        } z-50 transition-all duration-300`}\r\n                    >\r\n                        <Button\r\n                            color=\"transparent\"\r\n                            buttonType=\"link\"\r\n                            size=\"lg\"\r\n                            iconOnly\r\n                            rounded\r\n                            ripple=\"light\"\r\n                            onClick={() => setShowSidebar('-left-64')}\r\n                        >\r\n                            <Icon name=\"close\" size=\"2xl\" color=\"white\" />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"flex justify-between items-center w-full\">\r\n                    <h4 className=\"uppercase text-white text-sm tracking-wider mt-1\">\r\n                        {location === '/'\r\n                            ? 'DASHBOARD'\r\n                            : location.toUpperCase().replace('/', '')}\r\n                    </h4>\r\n\r\n                    <div className=\"flex\">\r\n                        {/* <NavbarInput placeholder=\"Search\" /> */}\r\n\r\n                        <div className=\"-mr-4 ml-6\">\r\n                            <Dropdown\r\n                                color=\"transparent\"\r\n                                buttonText={\r\n                                    <div className=\"w-12\">\r\n                                        <Image src={'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png'} rounded />\r\n                                    </div>\r\n                                }\r\n                                rounded\r\n                                style={{\r\n                                    padding: 0,\r\n                                    color: 'transparent',\r\n                                }}\r\n                            >\r\n                                <DropdownItem color=\"lightBlue\">\r\n                                    Logout\r\n                                </DropdownItem>\r\n                                \r\n                            </Dropdown>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n","import { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport AdminNavbar from \"./AdminNavbar\";\r\nimport Icon from \"@material-tailwind/react/Icon\";\r\nimport H6 from \"@material-tailwind/react/Heading6\";\r\nimport React from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { Link } from \"react-router-dom\";\r\nconst cookies = new Cookies();\r\nexport default function Sidebar() {\r\n  const [showSidebar, setShowSidebar] = useState(\"-left-64\");\r\n  const logout = () => {\r\n    cookies.remove(\"token\");\r\n    window.location.reload(false);\r\n  };\r\n  return (\r\n    <>\r\n      <AdminNavbar showSidebar={showSidebar} setShowSidebar={setShowSidebar} />\r\n      <div\r\n        className={`h-screen fixed top-0 md:left-0 ${showSidebar} overflow-y-auto flex-row flex-nowrap overflow-hidden shadow-xl bg-white w-64 z-10 py-4 px-6 transition-all duration-300`}\r\n      >\r\n        <div className=\"flex-col items-stretch min-h-full flex-nowrap px-0 relative\">\r\n          <Link\r\n            to=\"/\"\r\n            rel=\"noreferrer\"\r\n            className=\"mt-2 text-center w-full inline-block\"\r\n          >\r\n            <H6 color=\"gray\">Agricultiral</H6>\r\n          </Link>\r\n          <div className=\"flex flex-col\">\r\n            <hr className=\"my-4 min-w-full\" />\r\n\r\n            <ul className=\"flex-col min-w-full flex list-none\">\r\n              <li className=\"rounded-lg mb-4\">\r\n                <NavLink\r\n                  to=\"/\"\r\n                  exact\r\n                  className=\"flex items-center gap-4 text-sm text-gray-700 font-light px-4 py-3 rounded-lg\"\r\n                  activeClassName=\"bg-gradient-to-tr from-light-blue-500 to-light-blue-700 text-white shadow-md\"\r\n                >\r\n                  <Icon name=\"dashboard\" size=\"2xl\" />\r\n                  Dashboard\r\n                </NavLink>\r\n              </li>\r\n              {/* <li className=\"rounded-lg mb-2\">\r\n                                <NavLink\r\n                                    to=\"/settings\"\r\n                                    className=\"flex items-center gap-4 text-sm text-gray-700 font-light px-4 py-3 rounded-lg\"\r\n                                    activeClassName=\"bg-gradient-to-tr from-light-blue-500 to-light-blue-700 text-white shadow-md\"\r\n                                >\r\n                                    <Icon name=\"settings\" size=\"2xl\" />\r\n                                    Settings\r\n                                </NavLink>\r\n                            </li> */}\r\n              <li className=\"rounded-lg mb-2 \">\r\n                <NavLink\r\n                  to=\"/users\"\r\n                  className=\"flex items-center gap-4 text-sm text-gray-700 font-light px-4 py-3 rounded-lg\"\r\n                  activeClassName=\"bg-gradient-to-tr from-light-blue-500 to-light-blue-700 text-white shadow-md\"\r\n                >\r\n                  <Icon name=\"toc\" size=\"2xl\" />\r\n                  Users\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"rounded-lg mb-2 \">\r\n                <NavLink\r\n                  to=\"/nodes\"\r\n                  className=\"flex items-center gap-4 text-sm text-gray-700 font-light px-4 py-3 rounded-lg\"\r\n                  activeClassName=\"bg-gradient-to-tr from-light-blue-500 to-light-blue-700 text-white shadow-md\"\r\n                >\r\n                  <Icon name=\"toc\" size=\"2xl\" />\r\n                  Nodes\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"rounded-lg mb-2 \">\r\n                <NavLink\r\n                  to=\"/sensors\"\r\n                  className=\"flex items-center gap-4 text-sm text-gray-700 font-light px-4 py-3 rounded-lg\"\r\n                  activeClassName=\"bg-gradient-to-tr from-light-blue-500 to-light-blue-700 text-white shadow-md\"\r\n                >\r\n                  <Icon name=\"toc\" size=\"2xl\" />\r\n                  Sensors\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"rounded-lg mb-2 \">\r\n                <NavLink\r\n                  onClick={logout}\r\n                  to=\"/login\"\r\n                  className=\"flex items-center gap-4 text-sm text-gray-700 font-light px-4 py-3 rounded-lg\"\r\n                  activeClassName=\"bg-gradient-to-tr from-light-blue-500 to-light-blue-700 text-white shadow-md\"\r\n                >\r\n                  <Icon name=\"logout\" size=\"2xl\" />\r\n                  Logout\r\n                </NavLink>\r\n              </li>\r\n              {/* <li className=\"rounded-lg mb-2 text-gray-700\">\r\n                                <NavLink\r\n                                    to=\"/maps\"\r\n                                    className=\"flex items-center gap-4 text-sm text-gray-700 font-light px-4 py-3 rounded-lg\"\r\n                                    activeClassName=\"bg-gradient-to-tr from-light-blue-500 to-light-blue-700 text-white shadow-md\"\r\n                                >\r\n                                    <Icon name=\"map\" size=\"2xl\" />\r\n                                    Maps\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"px-4 rounded-lg mb-2 text-gray-700\">\r\n                                <a\r\n                                    href=\"https://demos.creative-tim.com/material-tailwind-kit-react/#/login\"\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\"\r\n                                    className=\"flex items-center gap-4 text-sm font-light py-3\"\r\n                                >\r\n                                    <Icon name=\"fingerprint\" size=\"2xl\" />\r\n                                    Login\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"px-4 rounded-lg mb-2 text-gray-700\">\r\n                                <a\r\n                                    href=\"https://demos.creative-tim.com/material-tailwind-kit-react/#/register\"\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\"\r\n                                    className=\"flex items-center gap-4 text-sm font-light py-3\"\r\n                                >\r\n                                    <Icon name=\"list_alt\" size=\"2xl\" />\r\n                                    Register\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"px-4 rounded-lg mb-2 text-gray-700\">\r\n                                <a\r\n                                    href=\"https://demos.creative-tim.com/material-tailwind-kit-react/#/landing\"\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\"\r\n                                    className=\"flex items-center gap-4 text-sm font-light py-3\"\r\n                                >\r\n                                    <Icon name=\"web\" size=\"2xl\" />\r\n                                    Landing Page\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"px-4 rounded-lg mb-2 text-gray-700\">\r\n                                <a\r\n                                    href=\"https://demos.creative-tim.com/material-tailwind-kit-react/#/profile\"\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\"\r\n                                    className=\"flex items-center gap-4 text-sm font-light py-3\"\r\n                                >\r\n                                    <Icon name=\"account_circle\" size=\"2xl\" />\r\n                                    Profile Page\r\n                                </a>\r\n                            </li> */}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import Card from '@material-tailwind/react/Card';\r\nimport CardRow from '@material-tailwind/react/CardRow';\r\nimport CardHeader from '@material-tailwind/react/CardHeader';\r\nimport CardStatus from '@material-tailwind/react/CardStatus';\r\nimport CardStatusFooter from '@material-tailwind/react/CardStatusFooter';\r\nimport Icon from '@material-tailwind/react/Icon';\r\nimport React from 'react';\r\n\r\nexport default function StatusCard({\r\n    color,\r\n    icon,\r\n    title,\r\n    amount,\r\n    percentage,\r\n    percentageColor,\r\n    percentageIcon,\r\n    date,\r\n}) {\r\n    return (\r\n        <div className=\"px-4 mb-10 \">\r\n            <Card  >\r\n                <CardRow>\r\n                    <CardHeader color={color} iconOnly className=\"mb-0\">\r\n                        <Icon name={icon} size=\"3xl\" color=\"white\" />\r\n                    </CardHeader>\r\n\r\n                    <CardStatus title={title} amount={amount} />\r\n                </CardRow>\r\n\r\n                <CardStatusFooter\r\n                    amount={percentage}\r\n                    color={percentageColor}\r\n                    date={date}\r\n                >\r\n                    <Icon color={percentageColor} name={percentageIcon} />\r\n                </CardStatusFooter>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n","import Card from \"@material-tailwind/react/Card\";\r\nimport CardHeader from \"@material-tailwind/react/CardHeader\";\r\nimport CardBody from \"@material-tailwind/react/CardBody\";\r\nimport Button from \"@material-tailwind/react/Button\";\r\nimport React from \"react\";\r\nimport { isPropertySignature } from \"typescript\";\r\n\r\nexport default function PageVisitsCard(props) {\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"blue\" contentPosition=\"none\">\r\n        <div className=\"w-full flex items-center justify-between\">\r\n          <h2 className=\"text-white text-2xl\">Sensors Not Used</h2>\r\n          <Button\r\n            color=\"transparent\"\r\n            buttonType=\"link\"\r\n            size=\"lg\"\r\n            style={{ padding: 0 }}\r\n          >\r\n            See More\r\n          </Button>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"items-center w-full bg-transparent border-collapse\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"px-2 text-teal-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                  No.\r\n                </th>\r\n                <th className=\"px-2 text-teal-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                  Name\r\n                </th>\r\n                <th className=\"px-2 text-teal-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                  Attribute1\r\n                </th>\r\n                <th className=\"px-2 text-teal-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                  Attribute2\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {props.sensors.map((item, index) => {\r\n                return (\r\n                  <tr>\r\n                    <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                      {index+1}\r\n                    </th>\r\n                    <td className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                      {item.name}\r\n                    </td>\r\n                    <td className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                      {item.attribute1}\r\n                    </td>\r\n                    <td className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                      {item.attribute1}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import Card from \"@material-tailwind/react/Card\";\r\nimport CardHeader from \"@material-tailwind/react/CardHeader\";\r\nimport CardBody from \"@material-tailwind/react/CardBody\";\r\nimport Button from \"@material-tailwind/react/Button\";\r\nimport Progress from \"@material-tailwind/react/Progress\";\r\nimport React from \"react\";\r\n\r\nexport default function TrafficCard(props) {\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"purple\" contentPosition=\"none\">\r\n        <div className=\"w-full flex items-center justify-between\">\r\n          <h2 className=\"text-white text-2xl\">Nodes Not Used</h2>\r\n          <Button\r\n            color=\"transparent\"\r\n            buttonType=\"link\"\r\n            size=\"lg\"\r\n            style={{ padding: 0 }}\r\n          >\r\n            See More\r\n          </Button>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"items-center w-full bg-transparent border-collapse\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                  No.\r\n                </th>\r\n                <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                  Visitors\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {props.nodes.map((item, index) => {\r\n                return (\r\n                  <tr>\r\n                    <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                      {index+1}\r\n                    </th>\r\n                    <td className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                      {item.name}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n             \r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport StatusCard from './StatusCard';\r\n\r\nexport default function analysis(props) {\r\n    return (\r\n        <div className=\"bg-light-blue-500 pt-14 pb-28 px-3 md:px-8 h-auto\">\r\n        <div className=\"container mx-auto max-w-full\">\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-4\">\r\n                <StatusCard\r\n                    color=\"pink\"\r\n                    icon=\"groups\"\r\n                    title=\"Sensors\"\r\n                    amount={props.sensor.ScannedCount}\r\n                    percentage={props.sensor.Count}\r\n                    percentageColor=\"green\"\r\n                    date=\"Sensors Not Used\"\r\n                />\r\n                <StatusCard\r\n                    color=\"orange\"\r\n                    icon=\"groups\"\r\n                    title=\"Nodes\"\r\n                    amount={props.node.ScannedCount}\r\n                    percentage={props.node.Count}\r\n                    percentageColor=\"green\"\r\n                    date=\"Nodes Not Used\"\r\n                />\r\n                <StatusCard\r\n                    color=\"purple\"\r\n                    icon=\"groups\"\r\n                    title=\"Users\"\r\n                    amount={props.user.ScannedCount}\r\n                    percentage={props.user.Count}\r\n                    percentageColor=\"green\"\r\n                    date=\"New Users\"\r\n                />\r\n                <StatusCard\r\n                    color=\"blue\"\r\n                    icon=\"trending_up\"\r\n                    title=\"Visits\"\r\n                    amount=\"924\"\r\n                    percentage=\"1.10\"\r\n                    percentageIcon=\"arrow_downward\"\r\n                    percentageColor=\"orange\"\r\n                    date=\"Since yesterday\"\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\nimport Cookies from \"universal-cookie\";\r\nconst cookies = new Cookies();\r\n\r\nlet token = cookies.get(\"token\");\r\n\r\nexport default axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE_URL_PRODUCTION||\"https://backend-software.agritech4.net\",\r\n    headers: {'Authorization': 'Bearer '+token}\r\n});\r\n\r\n// http://localhost:8080\r\n\r\n// http://localhost:8081\r\n","import axios from \"../../api/axios\";\r\n\r\nconst ANALYSIS_DASHBOARD = \"/api/dashboard\";\r\n\r\n\r\nexport const getAnalysis = async () => {\r\n  const response = await axios.get(ANALYSIS_DASHBOARD);\r\n\r\n  return response.data.message;\r\n};","import StatusCard from \"../../components/StatusCard\";\r\nimport ChartLine from \"../../components/ChartLine\";\r\nimport PageVisitsCard from \"../../components/PageVisitsCard\";\r\nimport TrafficCard from \"../../components/TrafficCard\";\r\nimport Analysis from \"../../components/Analysis\";\r\nimport React from \"react\";\r\nimport { getAnalysis } from \"./api\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nexport default function Dashboard() {\r\n  const { isLoading, error, data, isFetching } = useQuery(\r\n    [\"dashboardData\"],\r\n    () => getAnalysis(),\r\n    { keepPreviousData: true }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {data && (\r\n        <>\r\n          <Analysis sensor={data[0]} node={data[1]} user={data[2]} />\r\n          <div className=\"px-3 md:px-8 h-auto\">\r\n            <div className=\"container mx-auto max-w-full\">\r\n              <div className=\"grid grid-cols-1 xl:grid-cols-5\">\r\n                <div className=\"xl:col-start-1 xl:col-end-4 px-4 mb-14\">\r\n                  <PageVisitsCard sensors={data[3]} />\r\n                </div>\r\n                <div className=\"xl:col-start-4 xl:col-end-6 px-4 mb-14\">\r\n                  <TrafficCard nodes={data[4]} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/team-2-800x800.3e08ef14.jpg\";","export default __webpack_public_path__ + \"static/media/team-3-800x800.19201574.jpg\";","export default __webpack_public_path__ + \"static/media/team-4-470x470.4ef82ef4.png\";","import axios from \"../api/axios\";\r\nimport React from \"react\";\r\n\r\nconst Modal = (props) => {\r\n  //   const [showModal, setShowModal] = useState(props.state);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"justify-center items-center  flex overflow-x-hidden  fixed inset-0 z-50 outline-none focus:outline-none\">\r\n        <div className=\"relative mr-4 ml-4 pl-4 w-full md:w-1/2 my-6\">\r\n          {/*content*/}\r\n\r\n          <div className=\"border-0  rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\r\n            {/*header*/}\r\n\r\n            <div class=\"flex justify-end p-2\">\r\n              <button\r\n                onClick={() => props.setShowModal(false)}\r\n                type=\"button\"\r\n                class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-800 dark:hover:text-white\"\r\n                data-modal-toggle=\"authentication-modal\"\r\n              >\r\n                <svg\r\n                  class=\"w-8 h-8\"\r\n                  fill=\"currentColor\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                    clip-rule=\"evenodd\"\r\n                  ></path>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n\r\n            {props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import axios from \"../../api/axios\";\r\n\r\nconst GET_ALL_SENSORS = \"/api/getAllSensors\";\r\nconst ADD_SENSOR = \"/api/createSensor\";\r\nconst DELETE_SENSOR = \"/api/deleteSensor\";\r\n\r\nexport const getSensors = async () => {\r\n  const response = await axios.get(GET_ALL_SENSORS);\r\n\r\n  return response.data.message;\r\n};\r\n\r\nexport const addSensor = async (body) => {\r\n  const response = await axios.post(ADD_SENSOR, body, {\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  });\r\n\r\n  return response;\r\n};\r\n\r\nexport const deleteSensor = async (sensorId) => {\r\n    const response = await axios.delete(DELETE_SENSOR+`?PK=sensor&SK=${sensorId}`);\r\n    \r\n    return response;\r\n  };","import Card from \"@material-tailwind/react/Card\";\r\nimport CardHeader from \"@material-tailwind/react/CardHeader\";\r\nimport CardBody from \"@material-tailwind/react/CardBody\";\r\nimport Image from \"@material-tailwind/react/Image\";\r\nimport Progress from \"@material-tailwind/react/Progress\";\r\nimport Team1 from \"../../assets/img/team-1-800x800.jpg\";\r\nimport Team2 from \"../../assets/img/team-2-800x800.jpg\";\r\nimport Team3 from \"../../assets/img/team-3-800x800.jpg\";\r\nimport Team4 from \"../../assets/img/team-4-470x470.png\";\r\nimport React, { useState } from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { getSensors, addSensor, deleteSensor } from \"./api\";\r\nimport { useQuery } from \"react-query\";\r\nimport ReactDeleteRow from \"react-delete-row\";\r\n\r\nexport default function CardTable() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  // const [record, setRecord] = useState([]);\r\n  const [sensor, setSensor] = useState(false);\r\n  const { isLoading, error, data, isFetching } = useQuery(\r\n    [\"sensorData\"],\r\n    () => getSensors(),\r\n    { keepPreviousData: true }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader color=\"blue\" contentPosition=\"none\">\r\n          <div className=\"flex items-center justify-between  \">\r\n            <h2 className=\"text-white text-2xl \">Sensor Table</h2>\r\n\r\n            <button\r\n              onClick={() => {\r\n                setShowModal(true);\r\n                setSensor(\"\");\r\n              }}\r\n              class=\"bg-transparent  hover:bg-white text-white font-semibold hover:text-blue-700 py-2 px-4 border border-white hover:border-transparent rounded bg-blue-500 grow  text-grey-darkest  mx-1  inline-flex items-center\"\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"w-5 h-5 mr-2 fill-blue-500 hover:fill-cyan-700\"\r\n                // fill=\"#ffffff\"\r\n\r\n                x=\"0\"\r\n                y=\"0\"\r\n                enableBackground=\"new 0 0 16 16\"\r\n                version=\"1.1\"\r\n                viewBox=\"0 0 16 16\"\r\n                xmlSpace=\"preserve\"\r\n              >\r\n                <path d=\"M8 0C3.589 0 0 3.589 0 8s3.589 8 8 8 8-3.589 8-8-3.589-8-8-8zm0 14c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6z\"></path>\r\n                <path d=\"M9 4L7 4 7 7 4 7 4 9 7 9 7 12 9 12 9 9 12 9 12 7 9 7z\"></path>\r\n              </svg>\r\n              ADD SENSOR\r\n            </button>\r\n          </div>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"items-center w-full bg-transparent border-collapse\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                    Name\r\n                  </th>\r\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                    Attribute1\r\n                  </th>\r\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                    Attribute2\r\n                  </th>\r\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                    state\r\n                  </th>\r\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                    Action\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {isLoading && \"\"}\r\n\r\n                {error && \"\"}\r\n                {isFetching && \"\"}\r\n\r\n                {data &&\r\n                  data.Items.map((item) => {\r\n                    return (\r\n                      <tr>\r\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                          {item.name}\r\n                        </th>\r\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                          Attribute\r\n                        </th>\r\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                          <i className=\"fas fa-circle fa-sm text-orange-500 mr-2\"></i>{\" \"}\r\n                          Attribute\r\n                        </th>\r\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                          {item.GSI1PK != \"sensor\" ? \"used\" : \"not used\"}\r\n                        </th>\r\n                        <th className=\"flex border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                          <button\r\n                            onClick={() => {\r\n                              setShowModal(true);\r\n                              setSensor(item);\r\n                            }}\r\n                            class=\"bg-green-500 hover:bg-green-700  text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\r\n                          >\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              class=\"w-5 h-5\"\r\n                              x=\"0\"\r\n                              y=\"0\"\r\n                              enableBackground=\"new 0 0 330 330\"\r\n                              version=\"1.1\"\r\n                              viewBox=\"0 0 330 330\"\r\n                              xmlSpace=\"preserve\"\r\n                            >\r\n                              <g>\r\n                                <path d=\"M75 180v60c0 8.284 6.716 15 15 15h60a15 15 0 0010.606-4.394l164.999-165c5.858-5.858 5.858-15.355 0-21.213l-60-60a14.997 14.997 0 00-21.211.001l-165 165A14.994 14.994 0 0075 180zm30 6.213l150-150L293.787 75l-150 150H105v-38.787z\"></path>\r\n                                <path d=\"M315 150.001c-8.284 0-15 6.716-15 15V300H30V30h135c8.284 0 15-6.716 15-15s-6.716-15-15-15H15C6.716 0 0 6.716 0 15v300c0 8.284 6.716 15 15 15h300c8.284 0 15-6.716 15-15V165.001c0-8.285-6.716-15-15-15z\"></path>\r\n                              </g>\r\n                            </svg>\r\n                          </button>\r\n                          \r\n                          <ReactDeleteRow\r\n                            key={item.SK}\r\n                            data={item}\r\n                            deleteElement={\r\n                              <button\r\n                                onClick={() => deleteSensor(item.SK)}\r\n                                class=\"bg-red-400 hover:bg-red-500 text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\r\n                              >\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  class=\"w-5 h-5\"\r\n                                  x=\"0\"\r\n                                  y=\"0\"\r\n                                  enableBackground=\"new 0 0 348.333 348.334\"\r\n                                  version=\"1.1\"\r\n                                  viewBox=\"0 0 348.333 348.334\"\r\n                                  xmlSpace=\"preserve\"\r\n                                >\r\n                                  <path d=\"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\"></path>\r\n                                </svg>\r\n                              </button>\r\n                            }\r\n                            onDelete={(item) => {\r\n                              return window.confirm(\r\n                                `Are you sure you want to delete \"${item.name}\"?`\r\n                              );\r\n                            }}\r\n                          ></ReactDeleteRow>\r\n                        </th>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </CardBody>\r\n        {showModal ? (\r\n          <Modal setShowModal={setShowModal}>\r\n            <Form\r\n              item={sensor}\r\n              setSensor={setSensor}\r\n              setShowModal={setShowModal}\r\n            />\r\n          </Modal>\r\n        ) : null}\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Form = (props) => {\r\n  const [item, setItem] = useState(props.item);\r\n  const changeAttr = (attr) => {\r\n    setItem({ ...item, ...attr });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      class=\"px-6 pb-4 space-y-6 lg:px-8 sm:pb-6 xl:pb-8\"\r\n      action=\"#\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        addSensor(item);\r\n        props.setShowModal(false);\r\n      }}\r\n    >\r\n      <div class=\"flex flex-wrap -mx-3 mb-6\">\r\n        <div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"grid-first-name\"\r\n          >\r\n            Sensor Name\r\n          </label>\r\n          <input\r\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border  rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\r\n            id=\"Sensor-Name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={(e) => changeAttr({ name: e.target.value })}\r\n            value={item.name}\r\n            placeholder=\"Sensor Name\"\r\n          />\r\n          {/* <p class=\"text-red-500 text-xs italic\">Please fill out this field.</p> */}\r\n        </div>\r\n        <div class=\"w-full md:w-1/2 px-3\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"sensorId\"\r\n          >\r\n            sensorId\r\n          </label>\r\n          {!item.SK?  <input\r\n            onChange={(e) => changeAttr({ sensorId: e.target.value })}\r\n            value={item.sensorId}\r\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n            id=\"sensorId\"\r\n            name=\"sensorId\"\r\n            type=\"text\"\r\n            placeholder=\"sensorId\"\r\n          /> :   <label\r\n            class=\"block uppercase mt-4 ml-2 tracking-wide text-gray-700 text-lg font-bold mb-2\"\r\n            for=\"nodeId\"\r\n          >\r\n            {item.SK.split('_')[1]} \r\n          </label>}\r\n        </div>\r\n        {!item.SK? <input\r\n          \r\n          onChange={(e) => changeAttr({ nodeId: e.target.value })}\r\n          value={item.nodeId}\r\n          class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n          id=\"nodeId\"\r\n          name=\"nodeId\"\r\n          type=\"text\"\r\n          placeholder=\"nodeId\"\r\n          \r\n        /> :   <label\r\n            class=\"block uppercase mt-4 ml-2 tracking-wide text-gray-700 text-lg font-bold mb-2\"\r\n            for=\"nodeId\"\r\n          >\r\n            {item.SK.split('_')[1]}\r\n          </label>}\r\n      </div>\r\n      <div class=\"flex flex-wrap -mx-3 mb-6\">\r\n        <div class=\"w-full px-3\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"Attribute2\"\r\n          >\r\n            Attribute2\r\n          </label>\r\n          <input\r\n            onChange={(e) => changeAttr({ attribute2: e.target.value })}\r\n            value={item.attribute2}\r\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n            id=\"Attribute2\"\r\n            type=\"text\"\r\n            name=\"attribute2\"\r\n            placeholder=\"Attribute2\"\r\n          />\r\n          <p class=\"text-gray-600 text-xs italic\">\r\n            {/* Make it as long and as crazy as you'd like */}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"flex flex-wrap -mx-3 mb-2\">\r\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"Attribute3\"\r\n          >\r\n            Attribute3\r\n          </label>\r\n          <input\r\n            onChange={(e) => changeAttr({ attribute3: e.target.value })}\r\n            value={item.attribute3}\r\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n            id=\"Attribute3\"\r\n            name=\"attribute3\"\r\n            type=\"text\"\r\n            placeholder=\"Attribute3\"\r\n          />\r\n        </div>\r\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"Attribute4\"\r\n          >\r\n            Attribute4\r\n          </label>\r\n          <div class=\"relative\">\r\n            <select\r\n              onChange={(e) => changeAttr({ attribute4: e.target.value })}\r\n              value={item.attribute4}\r\n              name=\"attribute4\"\r\n              class=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n              id=\"Attribute4\"\r\n            >\r\n              <option>option 1</option>\r\n              <option>option 2</option>\r\n              <option>option 3</option>\r\n            </select>\r\n            <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n              <svg\r\n                class=\"fill-current h-4 w-4\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 20 20\"\r\n              >\r\n                <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"Attribute5\"\r\n          >\r\n            Attribute5\r\n          </label>\r\n          <input\r\n            onChange={(e) => changeAttr({ attribute5: e.target.value })}\r\n            value={item.attribute5}\r\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n            id=\"Attribute5\"\r\n            name=\"attribute5\"\r\n            type=\"text\"\r\n            placeholder=\"Attribute5\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"flex justify-center mt-5\">\r\n        <div class=\"mb-3 w-[50%]\">\r\n          <label\r\n            for=\"formFile\"\r\n            class=\"form-label inline-block mb-2 text-gray-700\"\r\n          ></label>\r\n          <input\r\n            class=\"form-control\r\n    block\r\n    w-full\r\n    px-3\r\n    py-1.5\r\n    text-base\r\n    font-normal\r\n    text-gray-700\r\n    bg-white bg-clip-padding\r\n    border border-solid border-gray-300\r\n    rounded\r\n    transition\r\n    ease-in-out\r\n    m-0\r\n    focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\r\n            type=\"file\"\r\n            id=\"formFile\"\r\n            name=\"img\"\r\n            onChange={(e) => changeAttr({ img: e.target.files[0] })}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"flex flex-wrap -mx-3 mb-2\">\r\n        <div class=\"w-full md:w-1/3 px-3 mb-6 mt-6 md:mb-0\">\r\n          <button\r\n            // onClick={()=>props.setShowModal(false)}\r\n            type=\"submit\"\r\n            class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import StatusCard from '../../components/StatusCard';\r\nimport TableCard from './TableCard';\r\nimport React from 'react';\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <>\r\n           \r\n\r\n            <div className=\"px-3 md:px-8 h-auto mt-20\">\r\n                <div className=\"container mx-auto max-w-full\">\r\n                    <div className=\"grid grid-cols-1 px-4 mb-16\">\r\n                        <TableCard />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import axios from \"../../api/axios\";\r\n\r\nconst GET_ALL_NODES = \"/api/getAllNodes\";\r\nconst ADD_NODE = \"/api/createNode\";\r\nconst DELETE_NODE = \"/api/deleteNode\";\r\nconst ADD_SENSOR_FOR_NODE = \"/api/addSensorforNode\";\r\nconst BETWEEN_TWO_DATES = \"/api/getReadingsBetweenTwoDates\";\r\n\r\nexport const getAllNodes = async () => {\r\n  const response = await axios.get(GET_ALL_NODES);\r\n\r\n  return response.data.message;\r\n};\r\n\r\nexport const addNode = async (body) => {\r\n  const response = await axios.post(ADD_NODE, body, {\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  });\r\n\r\n  return response;\r\n};\r\n\r\nexport const deleteNode = async (nodeId) => {\r\n    const response = await axios.delete(DELETE_NODE+`?PK=node&SK=${nodeId}`);\r\n    \r\n    return response;\r\n  };\r\n\r\n  export const addSensorforNode = async (body) => {\r\n    const response = await axios.put(ADD_SENSOR_FOR_NODE, body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    \r\n    return response;\r\n  };\r\n\r\n  export const getReadingsBetweenTwoDates = async (nodeId,body) => {\r\n    body = {\r\n      from :body[0]?.startDate,\r\n      to:body[0]?.endDate\r\n    }\r\nconsole.log(body);\r\n    const response = await axios.post(BETWEEN_TWO_DATES+\"/\"+nodeId, body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return response?.data?.message;\r\n  };","import React, { useState } from \"react\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport \"react-date-range/dist/styles.css\";\r\nimport \"react-date-range/dist/theme/default.css\";\r\nimport CsvDownload from 'react-json-to-csv'\r\nimport { useQuery } from \"react-query\";\r\nimport { getAllNodes, getReadingsBetweenTwoDates } from \"./api\";\r\n\r\n\r\n\r\nexport default function App(props) {\r\n\r\n    const [state, setState] = useState([\r\n        {\r\n            startDate: new Date(),\r\n            endDate: new Date(),\r\n            key: \"selection\"\r\n        }\r\n    ]);\r\n    const [data, setData] = useState([]);\r\n    const [complate, setComplate] = useState(false);\r\n    const [err, setErr] = useState('');\r\n\r\n\r\n    let dataMoc = [\r\n        {\r\n            \"Bettery\": \"88%\",\r\n            \"Luxes\": \"0 Ohms\",\r\n            \"SoilMoisture\": \"0\",\r\n            \"Pressure\": \"94175.070 Pa\",\r\n            \"Anemometer\": \"0 km/h\",\r\n            \"SK\": \"2022-05-21T18:39:03.985518961Z\",\r\n            \"Pluviometer\": \"0 mm/min\",\r\n            \"ATemprature\": \"26.010 °C\",\r\n            \"PK\": \"node_pns1\",\r\n            \"RHumidity\": \"28.526 RH%\",\r\n            \"WindDirection\": \"W ↑\",\r\n            \"Bytlength\": 102\r\n        },\r\n        {\r\n            \"Bettery\": \"87%\",\r\n            \"Luxes\": \"0 Ohms\",\r\n            \"SoilMoisture\": \"0\",\r\n            \"Pressure\": \"94174.742 Pa\",\r\n            \"Anemometer\": \"0 km/h\",\r\n            \"SK\": \"2022-05-21T18:38:04.001138409Z\",\r\n            \"Pluviometer\": \"0 mm/min\",\r\n            \"ATemprature\": \"26.000 °C\",\r\n            \"PK\": \"node_pns1\",\r\n            \"RHumidity\": \"28.587 RH%\",\r\n            \"WindDirection\": \"W ↑\",\r\n            \"Bytlength\": 102\r\n        },\r\n        {\r\n            \"Bettery\": \"88%\",\r\n            \"Luxes\": \"0 Ohms\",\r\n            \"SoilMoisture\": \"0\",\r\n            \"Pressure\": \"94173.984 Pa\",\r\n            \"Anemometer\": \"0 km/h\",\r\n            \"SK\": \"2022-05-21T18:37:03.995112925Z\",\r\n            \"Pluviometer\": \"0 mm/min\",\r\n            \"ATemprature\": \"25.990 °C\",\r\n            \"PK\": \"node_pns1\",\r\n            \"RHumidity\": \"28.463 RH%\",\r\n            \"WindDirection\": \"W ↑\",\r\n            \"Bytlength\": 102\r\n        }\r\n    ]\r\n    // const { isLoading, error, data, isFetching } = useQuery(\r\n    //     [\"CSV\"],\r\n    //     () => getReadingsBetweenTwoDates(),\r\n    //     { keepPreviousData: true }\r\n    // );\r\n    const filter = async () => {\r\n        setComplate(false)\r\n        let response = await getReadingsBetweenTwoDates(props.nodeId, state)\r\n        if (response.length != 0) {\r\n            console.log(response);\r\n            setData(response)\r\n            setComplate(true)\r\n            setErr('')\r\n\r\n        } else {\r\n            console.log('There are no any data');\r\n            setErr('There are no any data')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"App   flex flex-col container justify-center\">\r\n            <DateRange\r\n                onChange={item => {\r\n                    setComplate(false)\r\n                    setState([item.selection])\r\n\r\n                }}\r\n\r\n                moveRangeOnFirstSelection={false}\r\n                ranges={state}\r\n            />\r\n            <div className=\"text-red-500 text-xl text-center \">{err ? err : null}</div>\r\n            {complate ? null : <button className=\"bg-blue-500 px-6 py-2 rounded-md cursor-pointer font-bold\" onClick={filter}>get data</button>}\r\n            {data && complate && (<CsvDownload\r\n                data={data}\r\n                filename=\"good_data.csv\"\r\n                style={{ //pass other props, like styles\r\n                    background: \"#2296f3\",\r\n                    backgroundColor: \"#2296f3\",\r\n                    borderRadius: \"6px\",\r\n                    display: \"inline-block\",\r\n                    cursor: \"pointer\", \"color\": \"#ffffff\",\r\n                    fontSize: \"15px\",\r\n                    fontWeight: \"bold\",\r\n                    padding: \"6px 24px\",\r\n                    textDecoration: \"none\",\r\n                    textShadow: \"0px 1px 0px #9b14b3\"\r\n                }}\r\n            >\r\n                Download\r\n            </CsvDownload>)}\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}","import Card from \"@material-tailwind/react/Card\";\r\nimport CardHeader from \"@material-tailwind/react/CardHeader\";\r\nimport CardBody from \"@material-tailwind/react/CardBody\";\r\nimport FilterDate from \"./FilterDate\";\r\nimport Progress from \"@material-tailwind/react/Progress\";\r\nimport Team1 from \"../../assets/img/team-1-800x800.jpg\";\r\nimport Team2 from \"../../assets/img/team-2-800x800.jpg\";\r\nimport Team3 from \"../../assets/img/team-3-800x800.jpg\";\r\nimport Team4 from \"../../assets/img/team-4-470x470.png\";\r\nimport React, { useState } from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport Filter from \"./FilterDate\";\r\nimport { getAllNodes, addNode, deleteNode, addSensorforNode } from \"./api\";\r\nimport { useQuery } from \"react-query\";\r\nimport ReactDeleteRow from \"react-delete-row\";\r\nimport axios from \"api/axios\";\r\n\r\nexport default function CardTable() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModalDate, setShowModalDate] = useState(false);\r\n  const [showModalSensor, setShowModalSensor] = useState(false);\r\n\r\n  // const [record, setRecord] = useState([]);\r\n  const [node, setNode] = useState(false);\r\n\r\n  const { isLoading, error, data, isFetching } = useQuery(\r\n    [\"CSV\"],\r\n    () => getAllNodes(),\r\n    { keepPreviousData: true }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* <Filter/> */}\r\n      <Card>\r\n        <CardHeader color=\"blue\" contentPosition=\"none\">\r\n          <div className=\"flex items-center justify-between  \">\r\n            <h2 className=\"text-white text-2xl \">Node Table</h2>\r\n\r\n            <button\r\n              onClick={() => {\r\n                setShowModal(true);\r\n                setNode(\"\");\r\n              }}\r\n              class=\"bg-transparent  hover:bg-white text-white font-semibold hover:text-blue-700 py-2 px-4 border border-white hover:border-transparent rounded bg-blue-500 grow  text-grey-darkest  mx-1  inline-flex items-center\"\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"w-5 h-5 mr-2 fill-blue-500 hover:fill-cyan-700\"\r\n                // fill=\"#ffffff\"\r\n\r\n                x=\"0\"\r\n                y=\"0\"\r\n                enableBackground=\"new 0 0 16 16\"\r\n                version=\"1.1\"\r\n                viewBox=\"0 0 16 16\"\r\n                xmlSpace=\"preserve\"\r\n              >\r\n                <path d=\"M8 0C3.589 0 0 3.589 0 8s3.589 8 8 8 8-3.589 8-8-3.589-8-8-8zm0 14c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6z\"></path>\r\n                <path d=\"M9 4L7 4 7 7 4 7 4 9 7 9 7 12 9 12 9 9 12 9 12 7 9 7z\"></path>\r\n              </svg>\r\n              ADD NODE\r\n            </button>\r\n          </div>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"items-center w-full bg-transparent border-collapse\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                    Name\r\n                  </th>\r\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                    Attribute1\r\n                  </th>\r\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                    Attribute2\r\n                  </th>\r\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                    state\r\n                  </th>\r\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                    Action\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {isLoading && \"\"}\r\n\r\n                {error && \"\"}\r\n                {isFetching && \"\"}\r\n\r\n                {data &&\r\n                  data.Items.map((item) => {\r\n                    return (\r\n                      <tr>\r\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                          {item.name}\r\n                        </th>\r\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                          Attribute\r\n                        </th>\r\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                          <i className=\"fas fa-circle fa-sm text-orange-500 mr-2\"></i>{\" \"}\r\n                          Attribute\r\n                        </th>\r\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                          {item.GSI1PK != \"node\" ? \"used\" : \"not used\"}\r\n                        </th>\r\n                        <th className=\"flex border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                          <button\r\n                            onClick={() => {\r\n                              setShowModalSensor(true);\r\n                              setNode(item);\r\n                            }}\r\n                            class=\"bg-blue-500 hover:bg-blue-700  text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\r\n                          >\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              x=\"0\"\r\n                              y=\"0\"\r\n                              class=\"w-5 h-5\"\r\n                              enableBackground=\"new 0 0 16 16\"\r\n                              version=\"1.1\"\r\n                              viewBox=\"0 0 16 16\"\r\n                              xmlSpace=\"preserve\"\r\n                            >\r\n                              <path d=\"M8 0C3.589 0 0 3.589 0 8s3.589 8 8 8 8-3.589 8-8-3.589-8-8-8zm0 14c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6z\"></path>\r\n                              <path d=\"M9 4L7 4 7 7 4 7 4 9 7 9 7 12 9 12 9 9 12 9 12 7 9 7z\"></path>\r\n                            </svg>\r\n                          </button>\r\n                          <button\r\n                            onClick={() => {\r\n                              setShowModal(true);\r\n                              setNode(item);\r\n                            }}\r\n                            class=\"bg-green-500 hover:bg-green-700  text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\r\n                          >\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              class=\"w-5 h-5\"\r\n                              x=\"0\"\r\n                              y=\"0\"\r\n                              enableBackground=\"new 0 0 330 330\"\r\n                              version=\"1.1\"\r\n                              viewBox=\"0 0 330 330\"\r\n                              xmlSpace=\"preserve\"\r\n                            >\r\n                              <g>\r\n                                <path d=\"M75 180v60c0 8.284 6.716 15 15 15h60a15 15 0 0010.606-4.394l164.999-165c5.858-5.858 5.858-15.355 0-21.213l-60-60a14.997 14.997 0 00-21.211.001l-165 165A14.994 14.994 0 0075 180zm30 6.213l150-150L293.787 75l-150 150H105v-38.787z\"></path>\r\n                                <path d=\"M315 150.001c-8.284 0-15 6.716-15 15V300H30V30h135c8.284 0 15-6.716 15-15s-6.716-15-15-15H15C6.716 0 0 6.716 0 15v300c0 8.284 6.716 15 15 15h300c8.284 0 15-6.716 15-15V165.001c0-8.285-6.716-15-15-15z\"></path>\r\n                              </g>\r\n                            </svg>\r\n                          </button>\r\n                          <button\r\n                            onClick={() => {\r\n                              setShowModalDate(true);\r\n                              setNode(item);\r\n                            }}\r\n                            class=\"bg-green-200 hover:bg-green-700  text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\r\n                          >\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              width=\"20\"\r\n                              height=\"20\"\r\n                              viewBox=\"0 0 20 20\"\r\n                            >\r\n                              <path\r\n                                fill=\"#454242\"\r\n                                d=\"M5.673 0a.7.7 0 01.7.7v1.309h7.517v-1.3a.7.7 0 011.4 0v1.3H18a2 2 0 012 1.999v13.993A2 2 0 0118 20H2a2 2 0 01-2-1.999V4.008a2 2 0 012-1.999h2.973V.699a.7.7 0 01.7-.699zM1.4 7.742v10.259a.6.6 0 00.6.6h16a.6.6 0 00.6-.6V7.756L1.4 7.742zm5.267 6.877v1.666H5v-1.666h1.667zm4.166 0v1.666H9.167v-1.666h1.666zm4.167 0v1.666h-1.667v-1.666H15zm-8.333-3.977v1.666H5v-1.666h1.667zm4.166 0v1.666H9.167v-1.666h1.666zm4.167 0v1.666h-1.667v-1.666H15zM4.973 3.408H2a.6.6 0 00-.6.6v2.335l17.2.014V4.008a.6.6 0 00-.6-.6h-2.71v.929a.7.7 0 01-1.4 0v-.929H6.373v.92a.7.7 0 01-1.4 0v-.92z\"\r\n                              ></path>\r\n                            </svg>\r\n                          </button>\r\n                          <ReactDeleteRow\r\n                            key={item.SK}\r\n                            data={item}\r\n                            deleteElement={\r\n                              <button\r\n                                onClick={() => deleteNode(item.SK)}\r\n                                class=\"bg-red-400 hover:bg-red-500 text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\r\n                              >\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  class=\"w-5 h-5\"\r\n                                  x=\"0\"\r\n                                  y=\"0\"\r\n                                  enableBackground=\"new 0 0 348.333 348.334\"\r\n                                  version=\"1.1\"\r\n                                  viewBox=\"0 0 348.333 348.334\"\r\n                                  xmlSpace=\"preserve\"\r\n                                >\r\n                                  <path d=\"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\"></path>\r\n                                </svg>\r\n                              </button>\r\n                            }\r\n                            onDelete={(item) => {\r\n                              return window.confirm(\r\n                                `Are you sure you want to delete \"${item.name}\"?`\r\n                              );\r\n                            }}\r\n                          ></ReactDeleteRow>\r\n                        </th>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </CardBody>\r\n        {showModal ? (\r\n          <Modal setShowModal={setShowModal}>\r\n            <Form item={node} setNode={setNode} setShowModal={setShowModal} />\r\n          </Modal>\r\n        ) : null}\r\n\r\n        {showModalSensor ? (\r\n          <Modal setShowModal={setShowModalSensor}>\r\n            <ScoreModale\r\n              nodeId={node.SK}\r\n\r\n              setShowModalSensor={setShowModalSensor}\r\n            />\r\n          </Modal>\r\n        ) : null}\r\n        {showModalDate ? (\r\n          <Modal setShowModal={setShowModalDate}>\r\n            <Filter\r\n              nodeId={node.SK}\r\n              setShowModalDate={setShowModalDate}\r\n            />\r\n          </Modal>\r\n        ) : null}\r\n\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Form = (props) => {\r\n  const [item, setItem] = useState(props.item);\r\n  const changeAttr = (attr) => {\r\n    setItem({ ...item, ...attr });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      class=\"px-6 pb-4 space-y-6 lg:px-8 sm:pb-6 xl:pb-8\"\r\n      action=\"#\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        addNode(item);\r\n        props.setShowModal(false);\r\n      }}\r\n    >\r\n      <div class=\"flex flex-wrap -mx-3 mb-6\">\r\n        <div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"grid-first-name\"\r\n          >\r\n            Node Name\r\n          </label>\r\n          <input\r\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border  rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\r\n            id=\"Node-Name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={(e) => changeAttr({ name: e.target.value })}\r\n            value={item.name}\r\n            placeholder=\"Node Name\"\r\n          />\r\n          {/* <p class=\"text-red-500 text-xs italic\">Please fill out this field.</p> */}\r\n        </div>\r\n        <div class=\"w-full md:w-1/2 px-3\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"nodeId\"\r\n          >\r\n            nodeId\r\n          </label>\r\n          {!item.SK ? <input\r\n\r\n            onChange={(e) => changeAttr({ nodeId: e.target.value })}\r\n            value={item.nodeId}\r\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n            id=\"nodeId\"\r\n            name=\"nodeId\"\r\n            type=\"text\"\r\n            placeholder=\"nodeId\"\r\n\r\n          /> : <label\r\n            class=\"block uppercase mt-4 ml-2 tracking-wide text-gray-700 text-lg font-bold mb-2\"\r\n            for=\"nodeId\"\r\n          >\r\n            {item.SK.split('_')[1]}\r\n          </label>}\r\n        </div>\r\n      </div>\r\n      <div class=\"flex flex-wrap -mx-3 mb-6\">\r\n        <div class=\"w-full px-3\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"Attribute2\"\r\n          >\r\n            Attribute2\r\n          </label>\r\n          <input\r\n            onChange={(e) => changeAttr({ attribute2: e.target.value })}\r\n            value={item.attribute2}\r\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n            id=\"Attribute2\"\r\n            type=\"text\"\r\n            name=\"attribute2\"\r\n            placeholder=\"Attribute2\"\r\n          />\r\n          <p class=\"text-gray-600 text-xs italic\">\r\n            {/* Make it as long and as crazy as you'd like */}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"flex flex-wrap -mx-3 mb-2\">\r\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"Attribute3\"\r\n          >\r\n            Attribute3\r\n          </label>\r\n          <input\r\n            onChange={(e) => changeAttr({ attribute3: e.target.value })}\r\n            value={item.attribute3}\r\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n            id=\"Attribute3\"\r\n            name=\"attribute3\"\r\n            type=\"text\"\r\n            placeholder=\"Attribute3\"\r\n          />\r\n        </div>\r\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"Attribute4\"\r\n          >\r\n            Attribute4\r\n          </label>\r\n          <div class=\"relative\">\r\n            <select\r\n              onChange={(e) => changeAttr({ attribute4: e.target.value })}\r\n              value={item.attribute4}\r\n              name=\"attribute4\"\r\n              class=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n              id=\"Attribute4\"\r\n            >\r\n              <option>option 1</option>\r\n              <option>option 2</option>\r\n              <option>option 3</option>\r\n            </select>\r\n            <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n              <svg\r\n                class=\"fill-current h-4 w-4\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 20 20\"\r\n              >\r\n                <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"Attribute5\"\r\n          >\r\n            Attribute5\r\n          </label>\r\n          <input\r\n            onChange={(e) => changeAttr({ attribute5: e.target.value })}\r\n            value={item.attribute5}\r\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n            id=\"Attribute5\"\r\n            name=\"attribute5\"\r\n            type=\"text\"\r\n            placeholder=\"Attribute5\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"flex justify-center mt-5\">\r\n        <div class=\"mb-3 w-[50%]\">\r\n          <label\r\n            for=\"formFile\"\r\n            class=\"form-label inline-block mb-2 text-gray-700\"\r\n          ></label>\r\n          <input\r\n            class=\"form-control\r\n            \r\n    block\r\n    w-full\r\n    px-3\r\n    py-1.5\r\n    text-base\r\n    font-normal\r\n    text-gray-700\r\n    bg-white bg-clip-padding\r\n    border border-solid border-gray-300\r\n    rounded\r\n    transition\r\n    ease-in-out\r\n    m-0\r\n    focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\r\n            type=\"file\"\r\n            name=\"img\"\r\n            id=\"formFile\"\r\n            onChange={(e) => changeAttr({ img: e.target.files[0] })}\r\n\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"flex flex-wrap -mx-3 mb-2\">\r\n        <div class=\"w-full md:w-1/3 px-3 mb-6 mt-6 md:mb-0\">\r\n          <button\r\n            // onClick={()=>props.setShowModal(false)}\r\n            type=\"submit\"\r\n            class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ScoreModale = (props) => {\r\n  // const [BODY, setItem] = useState(props.item);\r\n  const { isLoading, error, data, isFetching } = useQuery(\r\n    [\"sensorNotSet\"],\r\n    () => fetchData(),\r\n    { keepPreviousData: true }\r\n  );\r\n\r\n  const fetchData = () => {\r\n    return axios.get(`/api/getSensorsNotSet`).then((res) => {\r\n      return res.data.message;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {isLoading && <Spinner />}\r\n      {error && <Spinner />}\r\n      {isFetching && <Spinner />} */}\r\n\r\n      <div class=\"flex   justify-between grid-cols-1 gap-4 m-5 md:grid-cols-2 md:gap-4 lg:grid-cols-3 lg:gap-4 xl:grid-cols-3 2xl:gap-4 2xl:grid-cols-3 \">\r\n        {data &&\r\n          data.Items.map((item) => {\r\n            return (\r\n              <>\r\n                <div class=\"flex items-center justify-center flex-col bg-blacky p-4 m-5  rounded-lg w-[90%] space-y-6\">\r\n                  <img\r\n                    class=\"rounded-full border-gray-100 shadow-sm w-24 h-24\"\r\n                    src={item.img}\r\n                    alt=\"user image\"\r\n                  />\r\n                  <h1 class=\"text-gray-50 font-semibold\">{item.name}</h1>\r\n\r\n                  <button\r\n                    onClick={() => {\r\n                      addSensorforNode({ ...item, nodeId: props.nodeId });\r\n                      props.setShowModalSensor(false)\r\n                    }}\r\n                    class=\"px-8 py-1 border-2  bg-yellowy rounded-full text-gray-50 font-semibold\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n","import StatusCard from '../../components/StatusCard';\r\nimport TableCard from './TableCard';\r\nimport React from 'react';\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <>\r\n\r\n            \r\n\r\n            <div className=\"px-3 md:px-8 h-auto mt-20\">\r\n                <div className=\"container mx-auto max-w-full\">\r\n                    <div className=\"grid grid-cols-1 px-4 mb-16\">\r\n                        <TableCard />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import axios from \"../../api/axios\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst GET_ALL_SENSORS = \"/api/getAllUsers\";\r\nconst ADD_SENSOR = \"/api/createUser\";\r\nconst DELETE_SENSOR = \"/api/deleteUser\";\r\nconst ADD_NODE_FOR_USER = \"/api/addNodeforUser\";\r\nconst cookies = new Cookies();\r\n\r\nexport const getUsers = async () => {\r\n  const response = await axios.get(GET_ALL_SENSORS);\r\n\r\n  return response.data.message;\r\n};\r\n\r\nexport const addUser = async (body) => {\r\n  \r\n  let token = cookies.get(\"token\");\r\n  const response = await axios.post(ADD_SENSOR, body, {\r\n    headers: { \"Content-Type\": \"application/json\" ,Authorization: `Bearer ${token.accessToken}`},\r\n  });\r\n\r\n  return response;\r\n};\r\n\r\nexport const deleteUser = async (userId) => {\r\n    const response = await axios.delete(DELETE_SENSOR+`?PK=user&SK=${userId}`);\r\n    \r\n    return response;\r\n  };\r\n\r\n  export const addNodeforUser = async (body) => {\r\n    const response = await axios.put(ADD_NODE_FOR_USER, body, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    \r\n    return response;\r\n  };","import Card from \"@material-tailwind/react/Card\";\r\nimport CardHeader from \"@material-tailwind/react/CardHeader\";\r\nimport CardBody from \"@material-tailwind/react/CardBody\";\r\nimport Image from \"@material-tailwind/react/Image\";\r\nimport Progress from \"@material-tailwind/react/Progress\";\r\nimport Team1 from \"../../assets/img/team-1-800x800.jpg\";\r\nimport Team2 from \"../../assets/img/team-2-800x800.jpg\";\r\nimport Team3 from \"../../assets/img/team-3-800x800.jpg\";\r\nimport Team4 from \"../../assets/img/team-4-470x470.png\";\r\nimport React, { useState } from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { getUsers, addUser, deleteUser, addNodeforUser } from \"./api\";\r\nimport { useQuery } from \"react-query\";\r\nimport ReactDeleteRow from \"react-delete-row\";\r\nimport axios from \"api/axios\";\r\n\r\nexport default function CardTable() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModalSensor, setShowModalSensor] = useState(false);\r\n\r\n  // const [record, setRecord] = useState([]);\r\n  const [user, setUser] = useState(false);\r\n  const { isLoading, error, data, isFetching } = useQuery(\r\n    [\"userData\"],\r\n    () => getUsers(),\r\n    { keepPreviousData: true }\r\n  );\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader color=\"blue\" contentPosition=\"none\">\r\n          <div className=\"flex items-center justify-between  \">\r\n            <h2 className=\"text-white text-2xl \">User Table</h2>\r\n\r\n            <button\r\n              onClick={() => {\r\n                setShowModal(true);\r\n                setUser(\"\");\r\n              }}\r\n              class=\"bg-transparent  hover:bg-white text-white font-semibold hover:text-blue-700 py-2 px-4 border border-white hover:border-transparent rounded bg-blue-500 grow  text-grey-darkest  mx-1  inline-flex items-center\"\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"w-5 h-5 mr-2 fill-blue-500 hover:fill-cyan-700\"\r\n                // fill=\"#ffffff\"\r\n\r\n                x=\"0\"\r\n                y=\"0\"\r\n                enableBackground=\"new 0 0 16 16\"\r\n                version=\"1.1\"\r\n                viewBox=\"0 0 16 16\"\r\n                xmlSpace=\"preserve\"\r\n              >\r\n                <path d=\"M8 0C3.589 0 0 3.589 0 8s3.589 8 8 8 8-3.589 8-8-3.589-8-8-8zm0 14c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6z\"></path>\r\n                <path d=\"M9 4L7 4 7 7 4 7 4 9 7 9 7 12 9 12 9 9 12 9 12 7 9 7z\"></path>\r\n              </svg>\r\n              ADD USER\r\n            </button>\r\n          </div>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"items-center w-full bg-transparent border-collapse\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                    Name\r\n                  </th>\r\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                    Email\r\n                  </th>\r\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                    Attribute2\r\n                  </th>\r\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                    state\r\n                  </th>\r\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\r\n                    Action\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {isLoading && \"\"}\r\n\r\n                {error && \"\"}\r\n                {isFetching && \"\"}\r\n\r\n                {data &&\r\n                  data.Items.map((item) => {\r\n                    return (\r\n                      <tr>\r\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                          {item.name}\r\n                        </th>\r\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                          {item.email}\r\n\r\n                        </th>\r\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                          <i className=\"fas fa-circle fa-sm text-orange-500 mr-2\"></i>{\" \"}\r\n                          Attribute\r\n                        </th>\r\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                          {item.GSI1PK != \"user\" ? \"used\" : \"not used\"}\r\n                        </th>\r\n                        <th className=\"flex border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\r\n                          <button\r\n                            onClick={() => {\r\n                              setShowModalSensor(true);\r\n                              setUser(item);\r\n                            }}\r\n                            class=\"bg-blue-500 hover:bg-blue-700  text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\r\n                          >\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              x=\"0\"\r\n                              y=\"0\"\r\n                              class=\"w-5 h-5\"\r\n                              enableBackground=\"new 0 0 16 16\"\r\n                              version=\"1.1\"\r\n                              viewBox=\"0 0 16 16\"\r\n                              xmlSpace=\"preserve\"\r\n                            >\r\n                              <path d=\"M8 0C3.589 0 0 3.589 0 8s3.589 8 8 8 8-3.589 8-8-3.589-8-8-8zm0 14c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6z\"></path>\r\n                              <path d=\"M9 4L7 4 7 7 4 7 4 9 7 9 7 12 9 12 9 9 12 9 12 7 9 7z\"></path>\r\n                            </svg>\r\n                          </button>\r\n                          <button\r\n                            onClick={() => {\r\n                              setShowModal(true);\r\n                              setUser(item);\r\n                            }}\r\n                            class=\"bg-green-500 hover:bg-green-700  text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\r\n                          >\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              class=\"w-5 h-5\"\r\n                              x=\"0\"\r\n                              y=\"0\"\r\n                              enableBackground=\"new 0 0 330 330\"\r\n                              version=\"1.1\"\r\n                              viewBox=\"0 0 330 330\"\r\n                              xmlSpace=\"preserve\"\r\n                            >\r\n                              <g>\r\n                                <path d=\"M75 180v60c0 8.284 6.716 15 15 15h60a15 15 0 0010.606-4.394l164.999-165c5.858-5.858 5.858-15.355 0-21.213l-60-60a14.997 14.997 0 00-21.211.001l-165 165A14.994 14.994 0 0075 180zm30 6.213l150-150L293.787 75l-150 150H105v-38.787z\"></path>\r\n                                <path d=\"M315 150.001c-8.284 0-15 6.716-15 15V300H30V30h135c8.284 0 15-6.716 15-15s-6.716-15-15-15H15C6.716 0 0 6.716 0 15v300c0 8.284 6.716 15 15 15h300c8.284 0 15-6.716 15-15V165.001c0-8.285-6.716-15-15-15z\"></path>\r\n                              </g>\r\n                            </svg>\r\n                          </button>\r\n                          <ReactDeleteRow\r\n                            key={item.SK}\r\n                            data={item}\r\n                            deleteElement={\r\n                              <button\r\n                                onClick={() => deleteUser(item.SK)}\r\n                                class=\"bg-red-400 hover:bg-red-500 text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\r\n                              >\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  class=\"w-5 h-5\"\r\n                                  x=\"0\"\r\n                                  y=\"0\"\r\n                                  enableBackground=\"new 0 0 348.333 348.334\"\r\n                                  version=\"1.1\"\r\n                                  viewBox=\"0 0 348.333 348.334\"\r\n                                  xmlSpace=\"preserve\"\r\n                                >\r\n                                  <path d=\"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\"></path>\r\n                                </svg>\r\n                              </button>\r\n                            }\r\n\r\n                            onDelete={(item) => {\r\n                              return window.confirm(\r\n                                `Are you sure you want to delete \"${item.name}\"?`\r\n                              );\r\n                            }}\r\n                          ></ReactDeleteRow>\r\n\r\n                        </th>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </CardBody>\r\n        {showModal ? (\r\n          <Modal setShowModal={setShowModal}>\r\n            <Form item={user} setUser={setUser} setShowModal={setShowModal} />\r\n          </Modal>\r\n        ) : null}\r\n        {showModalSensor ? (\r\n          <Modal setShowModal={setShowModalSensor}>\r\n            <ScoreModale\r\n              userId={user.SK}\r\n\r\n              setShowModalSensor={setShowModalSensor}\r\n            />\r\n          </Modal>\r\n        ) : null}\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Form = (props) => {\r\n  const [item, setItem] = useState(props.item);\r\n  const changeAttr = (attr) => {\r\n    console.log(attr);\r\n    setItem({ ...item, ...attr })\r\n  }\r\n\r\n  return (\r\n    <form\r\n      class=\"px-6 pb-4 space-y-6 lg:px-8 sm:pb-6 xl:pb-8\"\r\n      action=\"#\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        addUser(item);\r\n        props.setShowModal(false)\r\n      }}\r\n    >\r\n      <div class=\"flex flex-wrap -mx-3 mb-6\">\r\n        <div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"grid-first-name\"\r\n          >\r\n            User Name\r\n          </label>\r\n          <input\r\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border  rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\r\n            id=\"User-Name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={e => changeAttr({ name: e.target.value })}\r\n            value={item.name}\r\n            placeholder=\"User Name\"\r\n          />\r\n          {/* <p class=\"text-red-500 text-xs italic\">Please fill out this field.</p> */}\r\n        </div>\r\n        <div class=\"w-full md:w-1/2 px-3\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"email\"\r\n          >\r\n            email\r\n          </label>\r\n          <input\r\n            onChange={e => changeAttr({ email: e.target.value })}\r\n            value={item.email}\r\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"email\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"flex flex-wrap -mx-3 mb-6\">\r\n        <div class=\"w-full px-3\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"Attribute2\"\r\n          >\r\n            Attribute2\r\n          </label>\r\n          <input\r\n            onChange={e => changeAttr({ attribute2: e.target.value })}\r\n            value={item.attribute2}\r\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n            id=\"Attribute2\"\r\n            type=\"text\"\r\n            name=\"attribute2\"\r\n            placeholder=\"Attribute2\"\r\n          />\r\n          <p class=\"text-gray-600 text-xs italic\">\r\n            {/* Make it as long and as crazy as you'd like */}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"flex flex-wrap -mx-3 mb-2\">\r\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"Attribute3\"\r\n          >\r\n            Attribute3\r\n          </label>\r\n          <input\r\n            onChange={e => changeAttr({ attribute3: e.target.value })}\r\n\r\n            value={item.attribute3}\r\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n            id=\"Attribute3\"\r\n            name=\"attribute3\"\r\n            type=\"text\"\r\n            placeholder=\"Attribute3\"\r\n          />\r\n        </div>\r\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"Attribute4\"\r\n          >\r\n            Attribute4\r\n          </label>\r\n          <div class=\"relative\">\r\n            <select\r\n              onChange={e => changeAttr({ attribute4: e.target.value })}\r\n\r\n              value={item.attribute4}\r\n              name=\"attribute4\"\r\n              class=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n              id=\"Attribute4\"\r\n            >\r\n              <option>option 1</option>\r\n              <option>option 2</option>\r\n              <option>option 3</option>\r\n            </select>\r\n            <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n              <svg\r\n                class=\"fill-current h-4 w-4\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 20 20\"\r\n              >\r\n                <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"Attribute5\"\r\n          >\r\n            Attribute5\r\n          </label>\r\n          <input\r\n            onChange={e => changeAttr({ attribute5: e.target.value })}\r\n\r\n            value={item.attribute5}\r\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n            id=\"Attribute5\"\r\n            name=\"attribute5\"\r\n            type=\"text\"\r\n            placeholder=\"Attribute5\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"flex flex-wrap -mx-3 mb-2\">\r\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\r\n\r\n          <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold \">\r\n            <input\r\n              className=\"mx-4\"\r\n              type=\"checkbox\"\r\n              checked={item.dfNode}\r\n              onChange={e => changeAttr({ dfNode: e.target.checked })}\r\n            />\r\n            defulte Node\r\n          </label>\r\n        </div>\r\n        {item.dfNode ? <> <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\r\n          <label\r\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\r\n            for=\"countNodes\"\r\n          >\r\n            count for nodes\r\n          </label>\r\n          <input\r\n            onChange={e => changeAttr({ countNodes: e.target.value })}\r\n\r\n            value={item.countNodes}\r\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n            id=\"countNodes\"\r\n            name=\"countNodes\"\r\n            type=\"countNodes\"\r\n            placeholder=\"countNodes\"\r\n          />\r\n        </div>\r\n        </> : null}\r\n\r\n\r\n\r\n      </div>\r\n      <div class=\"flex flex-wrap -mx-3 mb-2\">\r\n        <div class=\"w-full md:w-1/3 px-3 mb-6 mt-6 md:mb-0\">\r\n          <button\r\n            // onClick={()=>props.setShowModal(false)}\r\n            type=\"submit\"\r\n            class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ScoreModale = (props) => {\r\n  // const [BODY, setItem] = useState(props.item);\r\n\r\n  const { isLoading, error, data, isFetching } = useQuery(\r\n    [\"sensorNotSet\"],\r\n    () => fetchData(),\r\n    { keepPreviousData: true }\r\n  );\r\n\r\n  const fetchData = () => {\r\n    return axios.get(`/api/getNodesNotSet`).then((res) => {\r\n      return res.data.message;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {isLoading && <Spinner />}\r\n      {error && <Spinner />}\r\n      {isFetching && <Spinner />} */}\r\n\r\n      <div class=\"flex   justify-between grid-cols-1 gap-4 m-5 md:grid-cols-2 md:gap-4 lg:grid-cols-3 lg:gap-4 xl:grid-cols-3 2xl:gap-4 2xl:grid-cols-3 \">\r\n        {data &&\r\n          data.Items.map((item) => {\r\n            return (\r\n              <>\r\n                <div class=\"flex items-center justify-center flex-col bg-blacky p-4 m-5  rounded-lg w-[90%] space-y-6\">\r\n                  <img\r\n                    class=\"rounded-full border-gray-100 shadow-sm w-24 h-24\"\r\n                    src={item.img}\r\n                    alt=\"user image\"\r\n                  />\r\n                  <h1 class=\"text-gray-50 font-semibold\">{item.name}</h1>\r\n\r\n                  <button\r\n                    onClick={() => {\r\n                      addNodeforUser({ ...item, userId: props.userId });\r\n                      props.setShowModalSensor(false)\r\n                    }}\r\n                    class=\"px-8 py-1 border-2  bg-yellowy rounded-full text-gray-50 font-semibold\">\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import StatusCard from '../../components/StatusCard';\r\nimport TableCard from './TableCard';\r\nimport React from 'react';\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <>\r\n            \r\n\r\n            <div className=\"px-3 md:px-8 h-auto mt-20\">\r\n                <div className=\"container mx-auto max-w-full\">\r\n                    <div className=\"grid grid-cols-1 px-4 mb-16\">\r\n                        <TableCard />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import axios from \"../api/axios\";\r\nimport React from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nconst cookies = new Cookies();\r\n\r\nconst LOGIN_URL = \"/auth/LoginAdmin\";\r\n\r\nexport default function Login() {\r\n  const [err, setErr] = React.useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const body = {\r\n      email: e.target.email.value,\r\n      password: e.target.password.value,\r\n    };\r\n\r\n      await axios.post(LOGIN_URL, body, {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }).then(response => {\r\n        const value = { accessToken: response?.data?.message?.jwt, userData: response?.data?.message?.userData };\r\n        cookies.set(\"token\", value, { path: \"/\" });\r\n        window.location.reload(false);\r\n      }).catch(err =>{\r\n          setErr(err.response?.data.message)\r\n\r\n      })\r\n  };\r\n  return (\r\n    <>\r\n      <main>\r\n        <section className=\"absolute w-full h-full\">\r\n          <div\r\n            className=\"absolute top-0 w-full h-full bg-gray-900\"\r\n            style={{\r\n              backgroundImage:\r\n                \"url(\" +\r\n                require(\"../assets/img/register_bg_2.png\").default +\r\n                \")\",\r\n              backgroundSize: \"100%\",\r\n              backgroundRepeat: \"no-repeat\",\r\n            }}\r\n          ></div>\r\n          <div className=\"container mx-auto px-4 h-full\">\r\n            <div className=\"flex content-center items-center justify-center h-full\">\r\n              <div className=\"w-full lg:w-4/12 px-4\">\r\n                <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-gray-300 border-0\">\r\n                  <div className=\"rounded-t mb-0 px-6 py-6\">\r\n                    <div className=\"text-center mb-3\">\r\n                      <h6 className=\"text-gray-600 text-2xl font-bold\">\r\n                        Sign in\r\n                      </h6>\r\n                    </div>\r\n                    <hr className=\"mt-6 border-b-1 border-gray-400\" />\r\n                  </div>\r\n                  <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\r\n                    <form onSubmit={handleSubmit}>\r\n                      <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                          className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\r\n                          htmlFor=\"grid-password\"\r\n                        >\r\n                          Email\r\n                        </label>\r\n                        <input\r\n                          name=\"email\"\r\n                          type=\"text\"\r\n                          className=\"border-0 px-3 py-3 placeholder-gray-400 text-gray-700 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full\"\r\n                          placeholder=\"Email\"\r\n                          style={{ transition: \"all .15s ease\" }}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"relative w-full mb-3\">\r\n                        <label\r\n                          className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\r\n                          htmlFor=\"grid-password\"\r\n                        >\r\n                          Password\r\n                        </label>\r\n                        <input\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                          id=\"password\"\r\n                          className=\"border-0 px-3 py-3 placeholder-gray-400 text-gray-700 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full\"\r\n                          placeholder=\"Password\"\r\n                          style={{ transition: \"all .15s ease\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"text-red-500 text-xl text-center\">{err}</div>\r\n                      <div className=\"text-center mt-6\">\r\n                        <button\r\n                          className=\"bg-gray-900 text-white active:bg-gray-700 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 w-full\"\r\n                          type=\"submit\"\r\n                          style={{ transition: \"all .15s ease\" }}\r\n                        >\r\n                          Sign In\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n                {/* <div className=\"flex flex-wrap mt-6\">\r\n                  <div className=\"w-1/2\">\r\n                    <a\r\n                      href=\"#pablo\"\r\n                      onClick={(e) => e.preventDefault()}\r\n                      className=\"text-gray-300\"\r\n                    >\r\n                      <small>Forgot password?</small>\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"w-1/2 text-right\">\r\n                    <a\r\n                      href=\"#pablo\"\r\n                      onClick={(e) => e.preventDefault()}\r\n                      className=\"text-gray-300\"\r\n                    >\r\n                      <small>Create new account</small>\r\n                    </a>\r\n                  </div>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Navigate,Outlet\r\n\r\n} from 'react-router-dom';\r\n\r\nfunction PrivateRoute({ children, isAuthenticated, ...rest }) {\r\n  return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" />;\r\n}\r\n\r\nexport default PrivateRoute;","import {\r\n  Navigate,Outlet\r\n\r\n} from 'react-router-dom';\r\n\r\nfunction PublicRoute({ children, isAuthenticated, ...rest }) {\r\n  return !isAuthenticated ? <Outlet /> : <Navigate to=\"/\" />;\r\n}\r\n\r\nexport default PublicRoute;","import { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Dashboard from \"./pages/dashboard/Dashboard\";\r\nimport Settings from \"./pages/Settings\";\r\nimport Tables from \"./pages/Tables\";\r\nimport Sensor from \"./pages/sensor/Tables\";\r\nimport Node from \"./pages/node/Tables\";\r\nimport User from \"./pages/user/Tables\";\r\nimport Maps from \"./pages/Maps\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport Footer from \"./components/Footer\";\r\n\r\n// Tailwind CSS Style Sheet\r\nimport \"./assets/styles/tailwind.css\";\r\nimport Login from \"./pages/Login\";\r\nimport Cookies from \"universal-cookie\";\r\nimport axios from \"./api/axios\";\r\nimport { useQuery } from \"react-query\";\r\nimport ProfileCard from \"components/ProfileCard\";\r\nimport PrivateRoute from \"components/PrivateRoute\";\r\nimport PublicRoute from \"components/PublicRoute\";\r\n\r\nconst cookies = new Cookies();\r\nconst VALIDATE_TOKEN_URL = \"/api/ValidateTokenAdmin\";\r\n\r\nconst App = () => {\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const { isLoading, error, data, isFetching } = useQuery(\r\n    [\"isLogin\"],\r\n    () => isAuth(),\r\n    { keepPreviousData: true }\r\n  );\r\n  const isAuth = async () => {\r\n    let token = cookies.get(\"token\");\r\n    if (token) {\r\n      try {\r\n        const res = await axios.get(VALIDATE_TOKEN_URL, {\r\n          headers: { Authorization: `Bearer ${token.accessToken}` },\r\n        });\r\n\r\n        if (res.data?.status) {\r\n          setIsLogin(res.data?.status);\r\n          return res.data.status;\r\n        } else {\r\n          cookies.remove(\"token\");\r\n          setIsLogin(false);\r\n        }\r\n      } catch (err) {\r\n        cookies.remove(\"token\");\r\n        setIsLogin(false);\r\n      }\r\n    } else {\r\n      cookies.remove(\"token\");\r\n      setIsLogin(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {isLoading && \"isLoading\"}\r\n      {error && \"error\"}\r\n      {isFetching && \"isFetching\"} */}\r\n      {!isLogin ? (\r\n        <Routes>\r\n          <Route exact element={<PublicRoute isAuthenticated={isLogin} />}>\r\n            <Route exact path=\"/login\" element={<Login />} />\r\n            <Route path=\"/\" element={<Navigate to=\"/login\" />} />\r\n            <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n\r\n          </Route>\r\n        </Routes>\r\n      ) : (\r\n        <>\r\n          <Sidebar />\r\n          <div className=\"md:ml-64\">\r\n            <Routes>\r\n              <Route exact element={<PrivateRoute isAuthenticated={isLogin} />}>\r\n                <Route path=\"/sensors\" element={<Sensor />} />\r\n              </Route>\r\n              <Route exact element={<PrivateRoute isAuthenticated={isLogin} />}>\r\n                <Route path=\"/nodes\" element={<Node />} />\r\n              </Route>\r\n              <Route exact element={<PrivateRoute isAuthenticated={isLogin} />}>\r\n                <Route path=\"/\" element={<Dashboard />} />\r\n              </Route>\r\n              <Route exact element={<PrivateRoute isAuthenticated={isLogin} />}>\r\n                <Route path=\"/users\" element={<User />} />\r\n              </Route>\r\n              <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n            </Routes>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\r\n\r\nconst queryClient = new QueryClient();\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <QueryClientProvider client={queryClient}>\r\n        <App />\r\n      </QueryClientProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 80;"],"sourceRoot":""}