{"version":3,"sources":["assets/img/register_bg_2.png","assets/img/team-1-800x800.jpg","components/AdminNavbar.js","components/Sidebar.js","components/StatusCard.js","components/PageVisitsCard.js","components/TrafficCard.js","components/Analysis.js","api/axios.js","pages/dashboard/api.js","pages/dashboard/Dashboard.js","assets/img/team-2-800x800.jpg","assets/img/team-3-800x800.jpg","assets/img/team-4-470x470.png","components/Modal.js","pages/sensor/api.js","pages/sensor/TableCard.js","pages/sensor/Tables.js","pages/node/api.js","pages/node/FilterDate.js","pages/node/TableCard.js","pages/node/Tables.js","pages/user/api.js","pages/user/TableCard.js","pages/user/Tables.js","pages/Login.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","reportWebVitals.js","index.js","../node_modules/typescript/lib sync"],"names":["AdminNavbar","showSidebar","setShowSidebar","location","useLocation","pathname","className","color","buttonType","size","iconOnly","rounded","ripple","onClick","name","toUpperCase","replace","buttonText","src","style","padding","cookies","Cookies","Sidebar","useState","to","rel","exact","activeClassName","remove","window","reload","StatusCard","icon","title","amount","percentage","percentageColor","percentageIcon","date","PageVisitsCard","props","contentPosition","sensors","map","item","index","attribute1","TrafficCard","nodes","analysis","sensor","ScannedCount","Count","node","user","token","get","axios","create","baseURL","headers","getAnalysis","a","response","data","message","Dashboard","useQuery","keepPreviousData","isLoading","error","isFetching","Modal","class","setShowModal","type","fill","viewBox","xmlns","d","children","getSensors","addSensor","body","post","deleteSensor","sensorId","delete","CardTable","showModal","setSensor","x","y","enableBackground","version","xmlSpace","Items","GSI1PK","deleteElement","SK","onDelete","confirm","Form","setItem","changeAttr","attr","action","onSubmit","e","preventDefault","for","id","onChange","target","value","placeholder","split","nodeId","attribute2","attribute3","attribute4","attribute5","img","files","getAllNodes","addNode","deleteNode","addSensorforNode","put","getReadingsBetweenTwoDates","from","startDate","endDate","console","log","BETWEEN_TWO_DATES","App","Date","key","state","setState","setData","complate","setComplate","err","setErr","filter","length","selection","moveRangeOnFirstSelection","ranges","filename","background","backgroundColor","borderRadius","display","cursor","fontSize","fontWeight","textDecoration","textShadow","showModalDate","setShowModalDate","showModalSensor","setShowModalSensor","setNode","width","height","ScoreModale","fetchData","then","res","alt","getUsers","addUser","Authorization","accessToken","deleteUser","userId","addNodeforUser","setUser","email","checked","dfNode","countNodes","Login","React","handleSubmit","password","jwt","userData","set","path","catch","backgroundImage","require","default","backgroundSize","backgroundRepeat","htmlFor","transition","PrivateRoute","isAuthenticated","PublicRoute","isLogin","setIsLogin","isAuth","status","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById","webpackEmptyContext","req","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.a24486cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/register_bg_2.4f2cb0ac.png\";","export default __webpack_public_path__ + \"static/media/team-1-800x800.fa5a7ac2.jpg\";","import { useLocation } from 'react-router-dom';\nimport Button from '@material-tailwind/react/Button';\nimport Icon from '@material-tailwind/react/Icon';\nimport NavbarInput from '@material-tailwind/react/NavbarInput';\nimport Image from '@material-tailwind/react/Image';\nimport Dropdown from '@material-tailwind/react/Dropdown';\nimport DropdownItem from '@material-tailwind/react/DropdownItem';\nimport ProfilePicture from '../assets/img/team-1-800x800.jpg';\nimport React from 'react';\n\nexport default function AdminNavbar({ showSidebar, setShowSidebar }) {\n    const location = useLocation().pathname;\n\n    return (\n        <nav className=\"bg-light-blue-500 md:ml-64 py-6 px-3\">\n            <div className=\"container max-w-full mx-auto flex items-center justify-between md:pr-8 md:pl-10\">\n                <div className=\"md:hidden\">\n                    <Button\n                        color=\"transparent\"\n                        buttonType=\"link\"\n                        size=\"lg\"\n                        iconOnly\n                        rounded\n                        ripple=\"light\"\n                        onClick={() => setShowSidebar('left-0')}\n                    >\n                        <Icon name=\"menu\" size=\"2xl\" color=\"white\" />\n                    </Button>\n                    <div\n                        className={`absolute top-2 md:hidden ${\n                            showSidebar === 'left-0' ? 'left-64' : '-left-64'\n                        } z-50 transition-all duration-300`}\n                    >\n                        <Button\n                            color=\"transparent\"\n                            buttonType=\"link\"\n                            size=\"lg\"\n                            iconOnly\n                            rounded\n                            ripple=\"light\"\n                            onClick={() => setShowSidebar('-left-64')}\n                        >\n                            <Icon name=\"close\" size=\"2xl\" color=\"white\" />\n                        </Button>\n                    </div>\n                </div>\n\n                <div className=\"flex justify-between items-center w-full\">\n                    <h4 className=\"uppercase text-white text-sm tracking-wider mt-1\">\n                        {location === '/'\n                            ? 'DASHBOARD'\n                            : location.toUpperCase().replace('/', '')}\n                    </h4>\n\n                    <div className=\"flex\">\n                        {/* <NavbarInput placeholder=\"Search\" /> */}\n\n                        <div className=\"-mr-4 ml-6\">\n                            <Dropdown\n                                color=\"transparent\"\n                                buttonText={\n                                    <div className=\"w-12\">\n                                        <Image src={'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png'} rounded />\n                                    </div>\n                                }\n                                rounded\n                                style={{\n                                    padding: 0,\n                                    color: 'transparent',\n                                }}\n                            >\n                                <DropdownItem color=\"lightBlue\">\n                                    Logout\n                                </DropdownItem>\n                                \n                            </Dropdown>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n}\n","import { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport AdminNavbar from \"./AdminNavbar\";\nimport Icon from \"@material-tailwind/react/Icon\";\nimport H6 from \"@material-tailwind/react/Heading6\";\nimport React from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Link } from \"react-router-dom\";\nconst cookies = new Cookies();\nexport default function Sidebar() {\n  const [showSidebar, setShowSidebar] = useState(\"-left-64\");\n  const logout = () => {\n    cookies.remove(\"token\");\n    window.location.reload(false);\n  };\n  return (\n    <>\n      <AdminNavbar showSidebar={showSidebar} setShowSidebar={setShowSidebar} />\n      <div\n        className={`h-screen fixed top-0 md:left-0 ${showSidebar} overflow-y-auto flex-row flex-nowrap overflow-hidden shadow-xl bg-white w-64 z-10 py-4 px-6 transition-all duration-300`}\n      >\n        <div className=\"flex-col items-stretch min-h-full flex-nowrap px-0 relative\">\n          <Link\n            to=\"/\"\n            rel=\"noreferrer\"\n            className=\"mt-2 text-center w-full inline-block\"\n          >\n            <H6 color=\"gray\">Agricultiral</H6>\n          </Link>\n          <div className=\"flex flex-col\">\n            <hr className=\"my-4 min-w-full\" />\n\n            <ul className=\"flex-col min-w-full flex list-none\">\n              <li className=\"rounded-lg mb-4\">\n                <NavLink\n                  to=\"/\"\n                  exact\n                  className=\"flex items-center gap-4 text-sm text-gray-700 font-light px-4 py-3 rounded-lg\"\n                  activeClassName=\"bg-gradient-to-tr from-light-blue-500 to-light-blue-700 text-white shadow-md\"\n                >\n                  <Icon name=\"dashboard\" size=\"2xl\" />\n                  Dashboard\n                </NavLink>\n              </li>\n              {/* <li className=\"rounded-lg mb-2\">\n                                <NavLink\n                                    to=\"/settings\"\n                                    className=\"flex items-center gap-4 text-sm text-gray-700 font-light px-4 py-3 rounded-lg\"\n                                    activeClassName=\"bg-gradient-to-tr from-light-blue-500 to-light-blue-700 text-white shadow-md\"\n                                >\n                                    <Icon name=\"settings\" size=\"2xl\" />\n                                    Settings\n                                </NavLink>\n                            </li> */}\n              <li className=\"rounded-lg mb-2 \">\n                <NavLink\n                  to=\"/users\"\n                  className=\"flex items-center gap-4 text-sm text-gray-700 font-light px-4 py-3 rounded-lg\"\n                  activeClassName=\"bg-gradient-to-tr from-light-blue-500 to-light-blue-700 text-white shadow-md\"\n                >\n                  <Icon name=\"toc\" size=\"2xl\" />\n                  Users\n                </NavLink>\n              </li>\n              <li className=\"rounded-lg mb-2 \">\n                <NavLink\n                  to=\"/nodes\"\n                  className=\"flex items-center gap-4 text-sm text-gray-700 font-light px-4 py-3 rounded-lg\"\n                  activeClassName=\"bg-gradient-to-tr from-light-blue-500 to-light-blue-700 text-white shadow-md\"\n                >\n                  <Icon name=\"toc\" size=\"2xl\" />\n                  Nodes\n                </NavLink>\n              </li>\n              <li className=\"rounded-lg mb-2 \">\n                <NavLink\n                  to=\"/sensors\"\n                  className=\"flex items-center gap-4 text-sm text-gray-700 font-light px-4 py-3 rounded-lg\"\n                  activeClassName=\"bg-gradient-to-tr from-light-blue-500 to-light-blue-700 text-white shadow-md\"\n                >\n                  <Icon name=\"toc\" size=\"2xl\" />\n                  Sensors\n                </NavLink>\n              </li>\n              <li className=\"rounded-lg mb-2 \">\n                <NavLink\n                  onClick={logout}\n                  to=\"/login\"\n                  className=\"flex items-center gap-4 text-sm text-gray-700 font-light px-4 py-3 rounded-lg\"\n                  activeClassName=\"bg-gradient-to-tr from-light-blue-500 to-light-blue-700 text-white shadow-md\"\n                >\n                  <Icon name=\"logout\" size=\"2xl\" />\n                  Logout\n                </NavLink>\n              </li>\n              {/* <li className=\"rounded-lg mb-2 text-gray-700\">\n                                <NavLink\n                                    to=\"/maps\"\n                                    className=\"flex items-center gap-4 text-sm text-gray-700 font-light px-4 py-3 rounded-lg\"\n                                    activeClassName=\"bg-gradient-to-tr from-light-blue-500 to-light-blue-700 text-white shadow-md\"\n                                >\n                                    <Icon name=\"map\" size=\"2xl\" />\n                                    Maps\n                                </NavLink>\n                            </li>\n                            <li className=\"px-4 rounded-lg mb-2 text-gray-700\">\n                                <a\n                                    href=\"https://demos.creative-tim.com/material-tailwind-kit-react/#/login\"\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                    className=\"flex items-center gap-4 text-sm font-light py-3\"\n                                >\n                                    <Icon name=\"fingerprint\" size=\"2xl\" />\n                                    Login\n                                </a>\n                            </li>\n                            <li className=\"px-4 rounded-lg mb-2 text-gray-700\">\n                                <a\n                                    href=\"https://demos.creative-tim.com/material-tailwind-kit-react/#/register\"\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                    className=\"flex items-center gap-4 text-sm font-light py-3\"\n                                >\n                                    <Icon name=\"list_alt\" size=\"2xl\" />\n                                    Register\n                                </a>\n                            </li>\n                            <li className=\"px-4 rounded-lg mb-2 text-gray-700\">\n                                <a\n                                    href=\"https://demos.creative-tim.com/material-tailwind-kit-react/#/landing\"\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                    className=\"flex items-center gap-4 text-sm font-light py-3\"\n                                >\n                                    <Icon name=\"web\" size=\"2xl\" />\n                                    Landing Page\n                                </a>\n                            </li>\n                            <li className=\"px-4 rounded-lg mb-2 text-gray-700\">\n                                <a\n                                    href=\"https://demos.creative-tim.com/material-tailwind-kit-react/#/profile\"\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                    className=\"flex items-center gap-4 text-sm font-light py-3\"\n                                >\n                                    <Icon name=\"account_circle\" size=\"2xl\" />\n                                    Profile Page\n                                </a>\n                            </li> */}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import Card from '@material-tailwind/react/Card';\nimport CardRow from '@material-tailwind/react/CardRow';\nimport CardHeader from '@material-tailwind/react/CardHeader';\nimport CardStatus from '@material-tailwind/react/CardStatus';\nimport CardStatusFooter from '@material-tailwind/react/CardStatusFooter';\nimport Icon from '@material-tailwind/react/Icon';\nimport React from 'react';\n\nexport default function StatusCard({\n    color,\n    icon,\n    title,\n    amount,\n    percentage,\n    percentageColor,\n    percentageIcon,\n    date,\n}) {\n    return (\n        <div className=\"px-4 mb-10 \">\n            <Card  >\n                <CardRow>\n                    <CardHeader color={color} iconOnly className=\"mb-0\">\n                        <Icon name={icon} size=\"3xl\" color=\"white\" />\n                    </CardHeader>\n\n                    <CardStatus title={title} amount={amount} />\n                </CardRow>\n\n                <CardStatusFooter\n                    amount={percentage}\n                    color={percentageColor}\n                    date={date}\n                >\n                    <Icon color={percentageColor} name={percentageIcon} />\n                </CardStatusFooter>\n            </Card>\n        </div>\n    );\n}\n","import Card from \"@material-tailwind/react/Card\";\nimport CardHeader from \"@material-tailwind/react/CardHeader\";\nimport CardBody from \"@material-tailwind/react/CardBody\";\nimport Button from \"@material-tailwind/react/Button\";\nimport React from \"react\";\nimport { isPropertySignature } from \"typescript\";\n\nexport default function PageVisitsCard(props) {\n  return (\n    <Card>\n      <CardHeader color=\"blue\" contentPosition=\"none\">\n        <div className=\"w-full flex items-center justify-between\">\n          <h2 className=\"text-white text-2xl\">Sensors Not Used</h2>\n          <Button\n            color=\"transparent\"\n            buttonType=\"link\"\n            size=\"lg\"\n            style={{ padding: 0 }}\n          >\n            See More\n          </Button>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <div className=\"overflow-x-auto\">\n          <table className=\"items-center w-full bg-transparent border-collapse\">\n            <thead>\n              <tr>\n                <th className=\"px-2 text-teal-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                  No.\n                </th>\n                <th className=\"px-2 text-teal-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                  Name\n                </th>\n                <th className=\"px-2 text-teal-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                  Attribute1\n                </th>\n                <th className=\"px-2 text-teal-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                  Attribute2\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {props.sensors.map((item, index) => {\n                return (\n                  <tr>\n                    <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                      {index+1}\n                    </th>\n                    <td className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                      {item.name}\n                    </td>\n                    <td className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                      {item.attribute1}\n                    </td>\n                    <td className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                      {item.attribute1}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n","import Card from \"@material-tailwind/react/Card\";\nimport CardHeader from \"@material-tailwind/react/CardHeader\";\nimport CardBody from \"@material-tailwind/react/CardBody\";\nimport Button from \"@material-tailwind/react/Button\";\nimport Progress from \"@material-tailwind/react/Progress\";\nimport React from \"react\";\n\nexport default function TrafficCard(props) {\n  return (\n    <Card>\n      <CardHeader color=\"purple\" contentPosition=\"none\">\n        <div className=\"w-full flex items-center justify-between\">\n          <h2 className=\"text-white text-2xl\">Nodes Not Used</h2>\n          <Button\n            color=\"transparent\"\n            buttonType=\"link\"\n            size=\"lg\"\n            style={{ padding: 0 }}\n          >\n            See More\n          </Button>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <div className=\"overflow-x-auto\">\n          <table className=\"items-center w-full bg-transparent border-collapse\">\n            <thead className=\"thead-light\">\n              <tr>\n                <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                  No.\n                </th>\n                <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                  Visitors\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {props.nodes.map((item, index) => {\n                return (\n                  <tr>\n                    <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                      {index+1}\n                    </th>\n                    <td className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                      {item.name}\n                    </td>\n                  </tr>\n                );\n              })}\n             \n            </tbody>\n          </table>\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from 'react';\nimport StatusCard from './StatusCard';\n\nexport default function analysis(props) {\n    return (\n        <div className=\"bg-light-blue-500 pt-14 pb-28 px-3 md:px-8 h-auto\">\n        <div className=\"container mx-auto max-w-full\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-4\">\n                <StatusCard\n                    color=\"pink\"\n                    icon=\"groups\"\n                    title=\"Sensors\"\n                    amount={props.sensor.ScannedCount}\n                    percentage={props.sensor.Count}\n                    percentageColor=\"green\"\n                    date=\"Sensors Not Used\"\n                />\n                <StatusCard\n                    color=\"orange\"\n                    icon=\"groups\"\n                    title=\"Nodes\"\n                    amount={props.node.ScannedCount}\n                    percentage={props.node.Count}\n                    percentageColor=\"green\"\n                    date=\"Nodes Not Used\"\n                />\n                <StatusCard\n                    color=\"purple\"\n                    icon=\"groups\"\n                    title=\"Users\"\n                    amount={props.user.ScannedCount}\n                    percentage={props.user.Count}\n                    percentageColor=\"green\"\n                    date=\"New Users\"\n                />\n                <StatusCard\n                    color=\"blue\"\n                    icon=\"trending_up\"\n                    title=\"Visits\"\n                    amount=\"924\"\n                    percentage=\"1.10\"\n                    percentageIcon=\"arrow_downward\"\n                    percentageColor=\"orange\"\n                    date=\"Since yesterday\"\n                />\n            </div>\n        </div>\n    </div>\n    );\n}\n","import axios from 'axios';\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n\nlet token = cookies.get(\"token\");\n\nexport default axios.create({\n    baseURL: 'http://localhost:8080',\n    headers: {'Authorization': 'Bearer '+token}\n});\n\n// http://localhost:8080\n\n// http://localhost:8081","import axios from \"../../api/axios\";\n\nconst ANALYSIS_DASHBOARD = \"/api/dashboard\";\n\n\nexport const getAnalysis = async () => {\n  const response = await axios.get(ANALYSIS_DASHBOARD);\n\n  return response.data.message;\n};","import StatusCard from \"../../components/StatusCard\";\nimport ChartLine from \"../../components/ChartLine\";\nimport PageVisitsCard from \"../../components/PageVisitsCard\";\nimport TrafficCard from \"../../components/TrafficCard\";\nimport Analysis from \"../../components/Analysis\";\nimport React from \"react\";\nimport { getAnalysis } from \"./api\";\nimport { useQuery } from \"react-query\";\n\nexport default function Dashboard() {\n  const { isLoading, error, data, isFetching } = useQuery(\n    [\"dashboardData\"],\n    () => getAnalysis(),\n    { keepPreviousData: true }\n  );\n\n  return (\n    <>\n      {data && (\n        <>\n          <Analysis sensor={data[0]} node={data[1]} user={data[2]} />\n          <div className=\"px-3 md:px-8 h-auto\">\n            <div className=\"container mx-auto max-w-full\">\n              <div className=\"grid grid-cols-1 xl:grid-cols-5\">\n                <div className=\"xl:col-start-1 xl:col-end-4 px-4 mb-14\">\n                  <PageVisitsCard sensors={data[3]} />\n                </div>\n                <div className=\"xl:col-start-4 xl:col-end-6 px-4 mb-14\">\n                  <TrafficCard nodes={data[4]} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/team-2-800x800.3e08ef14.jpg\";","export default __webpack_public_path__ + \"static/media/team-3-800x800.19201574.jpg\";","export default __webpack_public_path__ + \"static/media/team-4-470x470.4ef82ef4.png\";","import axios from \"../api/axios\";\nimport React from \"react\";\n\nconst Modal = (props) => {\n  //   const [showModal, setShowModal] = useState(props.state);\n\n  return (\n    <>\n      <div className=\"justify-center items-center  flex overflow-x-hidden  fixed inset-0 z-50 outline-none focus:outline-none\">\n        <div className=\"relative mr-4 ml-4 pl-4 w-full md:w-1/2 my-6\">\n          {/*content*/}\n\n          <div className=\"border-0  rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n            {/*header*/}\n\n            <div class=\"flex justify-end p-2\">\n              <button\n                onClick={() => props.setShowModal(false)}\n                type=\"button\"\n                class=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-800 dark:hover:text-white\"\n                data-modal-toggle=\"authentication-modal\"\n              >\n                <svg\n                  class=\"w-8 h-8\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 20 20\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                    clip-rule=\"evenodd\"\n                  ></path>\n                </svg>\n              </button>\n            </div>\n\n            {props.children}\n          </div>\n        </div>\n      </div>\n      <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n    </>\n  );\n};\n\nexport default Modal;\n","import axios from \"../../api/axios\";\n\nconst GET_ALL_SENSORS = \"/api/getAllSensors\";\nconst ADD_SENSOR = \"/api/createSensor\";\nconst DELETE_SENSOR = \"/api/deleteSensor\";\n\nexport const getSensors = async () => {\n  const response = await axios.get(GET_ALL_SENSORS);\n\n  return response.data.message;\n};\n\nexport const addSensor = async (body) => {\n  const response = await axios.post(ADD_SENSOR, body, {\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n\n  return response;\n};\n\nexport const deleteSensor = async (sensorId) => {\n    const response = await axios.delete(DELETE_SENSOR+`?PK=sensor&SK=${sensorId}`);\n    \n    return response;\n  };","import Card from \"@material-tailwind/react/Card\";\nimport CardHeader from \"@material-tailwind/react/CardHeader\";\nimport CardBody from \"@material-tailwind/react/CardBody\";\nimport Image from \"@material-tailwind/react/Image\";\nimport Progress from \"@material-tailwind/react/Progress\";\nimport Team1 from \"../../assets/img/team-1-800x800.jpg\";\nimport Team2 from \"../../assets/img/team-2-800x800.jpg\";\nimport Team3 from \"../../assets/img/team-3-800x800.jpg\";\nimport Team4 from \"../../assets/img/team-4-470x470.png\";\nimport React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { getSensors, addSensor, deleteSensor } from \"./api\";\nimport { useQuery } from \"react-query\";\nimport ReactDeleteRow from \"react-delete-row\";\n\nexport default function CardTable() {\n  const [showModal, setShowModal] = useState(false);\n  // const [record, setRecord] = useState([]);\n  const [sensor, setSensor] = useState(false);\n  const { isLoading, error, data, isFetching } = useQuery(\n    [\"sensorData\"],\n    () => getSensors(),\n    { keepPreviousData: true }\n  );\n\n  return (\n    <>\n      <Card>\n        <CardHeader color=\"blue\" contentPosition=\"none\">\n          <div className=\"flex items-center justify-between  \">\n            <h2 className=\"text-white text-2xl \">Sensor Table</h2>\n\n            <button\n              onClick={() => {\n                setShowModal(true);\n                setSensor(\"\");\n              }}\n              class=\"bg-transparent  hover:bg-white text-white font-semibold hover:text-blue-700 py-2 px-4 border border-white hover:border-transparent rounded bg-blue-500 grow  text-grey-darkest  mx-1  inline-flex items-center\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"w-5 h-5 mr-2 fill-blue-500 hover:fill-cyan-700\"\n                // fill=\"#ffffff\"\n\n                x=\"0\"\n                y=\"0\"\n                enableBackground=\"new 0 0 16 16\"\n                version=\"1.1\"\n                viewBox=\"0 0 16 16\"\n                xmlSpace=\"preserve\"\n              >\n                <path d=\"M8 0C3.589 0 0 3.589 0 8s3.589 8 8 8 8-3.589 8-8-3.589-8-8-8zm0 14c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6z\"></path>\n                <path d=\"M9 4L7 4 7 7 4 7 4 9 7 9 7 12 9 12 9 9 12 9 12 7 9 7z\"></path>\n              </svg>\n              ADD SENSOR\n            </button>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <div className=\"overflow-x-auto\">\n            <table className=\"items-center w-full bg-transparent border-collapse\">\n              <thead>\n                <tr>\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                    Name\n                  </th>\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                    Attribute1\n                  </th>\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                    Attribute2\n                  </th>\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                    state\n                  </th>\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                    Action\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {isLoading && \"\"}\n\n                {error && \"\"}\n                {isFetching && \"\"}\n\n                {data &&\n                  data.Items.map((item) => {\n                    return (\n                      <tr>\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                          {item.name}\n                        </th>\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                          Attribute\n                        </th>\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                          <i className=\"fas fa-circle fa-sm text-orange-500 mr-2\"></i>{\" \"}\n                          Attribute\n                        </th>\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                          {item.GSI1PK != \"sensor\" ? \"used\" : \"not used\"}\n                        </th>\n                        <th className=\"flex border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                          <button\n                            onClick={() => {\n                              setShowModal(true);\n                              setSensor(item);\n                            }}\n                            class=\"bg-green-500 hover:bg-green-700  text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              class=\"w-5 h-5\"\n                              x=\"0\"\n                              y=\"0\"\n                              enableBackground=\"new 0 0 330 330\"\n                              version=\"1.1\"\n                              viewBox=\"0 0 330 330\"\n                              xmlSpace=\"preserve\"\n                            >\n                              <g>\n                                <path d=\"M75 180v60c0 8.284 6.716 15 15 15h60a15 15 0 0010.606-4.394l164.999-165c5.858-5.858 5.858-15.355 0-21.213l-60-60a14.997 14.997 0 00-21.211.001l-165 165A14.994 14.994 0 0075 180zm30 6.213l150-150L293.787 75l-150 150H105v-38.787z\"></path>\n                                <path d=\"M315 150.001c-8.284 0-15 6.716-15 15V300H30V30h135c8.284 0 15-6.716 15-15s-6.716-15-15-15H15C6.716 0 0 6.716 0 15v300c0 8.284 6.716 15 15 15h300c8.284 0 15-6.716 15-15V165.001c0-8.285-6.716-15-15-15z\"></path>\n                              </g>\n                            </svg>\n                          </button>\n                          \n                          <ReactDeleteRow\n                            key={item.SK}\n                            data={item}\n                            deleteElement={\n                              <button\n                                onClick={() => deleteSensor(item.SK)}\n                                class=\"bg-red-400 hover:bg-red-500 text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\n                              >\n                                <svg\n                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                  class=\"w-5 h-5\"\n                                  x=\"0\"\n                                  y=\"0\"\n                                  enableBackground=\"new 0 0 348.333 348.334\"\n                                  version=\"1.1\"\n                                  viewBox=\"0 0 348.333 348.334\"\n                                  xmlSpace=\"preserve\"\n                                >\n                                  <path d=\"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\"></path>\n                                </svg>\n                              </button>\n                            }\n                            onDelete={(item) => {\n                              return window.confirm(\n                                `Are you sure you want to delete \"${item.name}\"?`\n                              );\n                            }}\n                          ></ReactDeleteRow>\n                        </th>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          </div>\n        </CardBody>\n        {showModal ? (\n          <Modal setShowModal={setShowModal}>\n            <Form\n              item={sensor}\n              setSensor={setSensor}\n              setShowModal={setShowModal}\n            />\n          </Modal>\n        ) : null}\n      </Card>\n    </>\n  );\n}\n\nconst Form = (props) => {\n  const [item, setItem] = useState(props.item);\n  const changeAttr = (attr) => {\n    setItem({ ...item, ...attr });\n  };\n\n  return (\n    <form\n      class=\"px-6 pb-4 space-y-6 lg:px-8 sm:pb-6 xl:pb-8\"\n      action=\"#\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        addSensor(item);\n        props.setShowModal(false);\n      }}\n    >\n      <div class=\"flex flex-wrap -mx-3 mb-6\">\n        <div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"grid-first-name\"\n          >\n            Sensor Name\n          </label>\n          <input\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border  rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\n            id=\"Sensor-Name\"\n            type=\"text\"\n            name=\"name\"\n            onChange={(e) => changeAttr({ name: e.target.value })}\n            value={item.name}\n            placeholder=\"Sensor Name\"\n          />\n          {/* <p class=\"text-red-500 text-xs italic\">Please fill out this field.</p> */}\n        </div>\n        <div class=\"w-full md:w-1/2 px-3\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"sensorId\"\n          >\n            sensorId\n          </label>\n          {!item.SK?  <input\n            onChange={(e) => changeAttr({ sensorId: e.target.value })}\n            value={item.sensorId}\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"sensorId\"\n            name=\"sensorId\"\n            type=\"text\"\n            placeholder=\"sensorId\"\n          /> :   <label\n            class=\"block uppercase mt-4 ml-2 tracking-wide text-gray-700 text-lg font-bold mb-2\"\n            for=\"nodeId\"\n          >\n            {item.SK.split('_')[1]} \n          </label>}\n        </div>\n        {!item.SK? <input\n          \n          onChange={(e) => changeAttr({ nodeId: e.target.value })}\n          value={item.nodeId}\n          class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n          id=\"nodeId\"\n          name=\"nodeId\"\n          type=\"text\"\n          placeholder=\"nodeId\"\n          \n        /> :   <label\n            class=\"block uppercase mt-4 ml-2 tracking-wide text-gray-700 text-lg font-bold mb-2\"\n            for=\"nodeId\"\n          >\n            {item.SK.split('_')[1]}\n          </label>}\n      </div>\n      <div class=\"flex flex-wrap -mx-3 mb-6\">\n        <div class=\"w-full px-3\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"Attribute2\"\n          >\n            Attribute2\n          </label>\n          <input\n            onChange={(e) => changeAttr({ attribute2: e.target.value })}\n            value={item.attribute2}\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"Attribute2\"\n            type=\"text\"\n            name=\"attribute2\"\n            placeholder=\"Attribute2\"\n          />\n          <p class=\"text-gray-600 text-xs italic\">\n            {/* Make it as long and as crazy as you'd like */}\n          </p>\n        </div>\n      </div>\n      <div class=\"flex flex-wrap -mx-3 mb-2\">\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"Attribute3\"\n          >\n            Attribute3\n          </label>\n          <input\n            onChange={(e) => changeAttr({ attribute3: e.target.value })}\n            value={item.attribute3}\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"Attribute3\"\n            name=\"attribute3\"\n            type=\"text\"\n            placeholder=\"Attribute3\"\n          />\n        </div>\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"Attribute4\"\n          >\n            Attribute4\n          </label>\n          <div class=\"relative\">\n            <select\n              onChange={(e) => changeAttr({ attribute4: e.target.value })}\n              value={item.attribute4}\n              name=\"attribute4\"\n              class=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n              id=\"Attribute4\"\n            >\n              <option>option 1</option>\n              <option>option 2</option>\n              <option>option 3</option>\n            </select>\n            <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n              <svg\n                class=\"fill-current h-4 w-4\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"Attribute5\"\n          >\n            Attribute5\n          </label>\n          <input\n            onChange={(e) => changeAttr({ attribute5: e.target.value })}\n            value={item.attribute5}\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"Attribute5\"\n            name=\"attribute5\"\n            type=\"text\"\n            placeholder=\"Attribute5\"\n          />\n        </div>\n      </div>\n      <div class=\"flex justify-center mt-5\">\n        <div class=\"mb-3 w-[50%]\">\n          <label\n            for=\"formFile\"\n            class=\"form-label inline-block mb-2 text-gray-700\"\n          ></label>\n          <input\n            class=\"form-control\n    block\n    w-full\n    px-3\n    py-1.5\n    text-base\n    font-normal\n    text-gray-700\n    bg-white bg-clip-padding\n    border border-solid border-gray-300\n    rounded\n    transition\n    ease-in-out\n    m-0\n    focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\n            type=\"file\"\n            id=\"formFile\"\n            name=\"img\"\n            onChange={(e) => changeAttr({ img: e.target.files[0] })}\n          />\n        </div>\n      </div>\n      <div class=\"flex flex-wrap -mx-3 mb-2\">\n        <div class=\"w-full md:w-1/3 px-3 mb-6 mt-6 md:mb-0\">\n          <button\n            // onClick={()=>props.setShowModal(false)}\n            type=\"submit\"\n            class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import StatusCard from '../../components/StatusCard';\nimport TableCard from './TableCard';\nimport React from 'react';\n\nexport default function Dashboard() {\n    return (\n        <>\n           \n\n            <div className=\"px-3 md:px-8 h-auto mt-20\">\n                <div className=\"container mx-auto max-w-full\">\n                    <div className=\"grid grid-cols-1 px-4 mb-16\">\n                        <TableCard />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n","import axios from \"../../api/axios\";\n\nconst GET_ALL_NODES = \"/api/getAllNodes\";\nconst ADD_NODE = \"/api/createNode\";\nconst DELETE_NODE = \"/api/deleteNode\";\nconst ADD_SENSOR_FOR_NODE = \"/api/addSensorforNode\";\nconst BETWEEN_TWO_DATES = \"/api/getReadingsBetweenTwoDates\";\n\nexport const getAllNodes = async () => {\n  const response = await axios.get(GET_ALL_NODES);\n\n  return response.data.message;\n};\n\nexport const addNode = async (body) => {\n  const response = await axios.post(ADD_NODE, body, {\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n\n  return response;\n};\n\nexport const deleteNode = async (nodeId) => {\n    const response = await axios.delete(DELETE_NODE+`?PK=node&SK=${nodeId}`);\n    \n    return response;\n  };\n\n  export const addSensorforNode = async (body) => {\n    const response = await axios.put(ADD_SENSOR_FOR_NODE, body, {\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n    \n    return response;\n  };\n\n  export const getReadingsBetweenTwoDates = async (nodeId,body) => {\n    body = {\n      from :body[0]?.startDate,\n      to:body[0]?.endDate\n    }\nconsole.log(body);\n    const response = await axios.post(BETWEEN_TWO_DATES+\"/\"+nodeId, body, {\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n    return response?.data?.message;\n  };","import React, { useState } from \"react\";\nimport { DateRange } from \"react-date-range\";\nimport \"react-date-range/dist/styles.css\";\nimport \"react-date-range/dist/theme/default.css\";\nimport CsvDownload from 'react-json-to-csv'\nimport { useQuery } from \"react-query\";\nimport { getAllNodes, getReadingsBetweenTwoDates } from \"./api\";\n\n\n\nexport default function App(props) {\n\n    const [state, setState] = useState([\n        {\n            startDate: new Date(),\n            endDate: new Date(),\n            key: \"selection\"\n        }\n    ]);\n    const [data, setData] = useState([]);\n    const [complate, setComplate] = useState(false);\n    const [err, setErr] = useState('');\n\n\n    let dataMoc = [\n        {\n            \"Bettery\": \"88%\",\n            \"Luxes\": \"0 Ohms\",\n            \"SoilMoisture\": \"0\",\n            \"Pressure\": \"94175.070 Pa\",\n            \"Anemometer\": \"0 km/h\",\n            \"SK\": \"2022-05-21T18:39:03.985518961Z\",\n            \"Pluviometer\": \"0 mm/min\",\n            \"ATemprature\": \"26.010 °C\",\n            \"PK\": \"node_pns1\",\n            \"RHumidity\": \"28.526 RH%\",\n            \"WindDirection\": \"W ↑\",\n            \"Bytlength\": 102\n        },\n        {\n            \"Bettery\": \"87%\",\n            \"Luxes\": \"0 Ohms\",\n            \"SoilMoisture\": \"0\",\n            \"Pressure\": \"94174.742 Pa\",\n            \"Anemometer\": \"0 km/h\",\n            \"SK\": \"2022-05-21T18:38:04.001138409Z\",\n            \"Pluviometer\": \"0 mm/min\",\n            \"ATemprature\": \"26.000 °C\",\n            \"PK\": \"node_pns1\",\n            \"RHumidity\": \"28.587 RH%\",\n            \"WindDirection\": \"W ↑\",\n            \"Bytlength\": 102\n        },\n        {\n            \"Bettery\": \"88%\",\n            \"Luxes\": \"0 Ohms\",\n            \"SoilMoisture\": \"0\",\n            \"Pressure\": \"94173.984 Pa\",\n            \"Anemometer\": \"0 km/h\",\n            \"SK\": \"2022-05-21T18:37:03.995112925Z\",\n            \"Pluviometer\": \"0 mm/min\",\n            \"ATemprature\": \"25.990 °C\",\n            \"PK\": \"node_pns1\",\n            \"RHumidity\": \"28.463 RH%\",\n            \"WindDirection\": \"W ↑\",\n            \"Bytlength\": 102\n        }\n    ]\n    // const { isLoading, error, data, isFetching } = useQuery(\n    //     [\"CSV\"],\n    //     () => getReadingsBetweenTwoDates(),\n    //     { keepPreviousData: true }\n    // );\n    const filter = async () => {\n        setComplate(false)\n        let response = await getReadingsBetweenTwoDates(props.nodeId, state)\n        if (response.length != 0) {\n            console.log(response);\n            setData(response)\n            setComplate(true)\n            setErr('')\n\n        } else {\n            console.log('There are no any data');\n            setErr('There are no any data')\n        }\n\n    }\n    return (\n        <div className=\"App   flex flex-col container justify-center\">\n            <DateRange\n                onChange={item => {\n                    setComplate(false)\n                    setState([item.selection])\n\n                }}\n\n                moveRangeOnFirstSelection={false}\n                ranges={state}\n            />\n            <div className=\"text-red-500 text-xl text-center \">{err ? err : null}</div>\n            {complate ? null : <button className=\"bg-blue-500 px-6 py-2 rounded-md cursor-pointer font-bold\" onClick={filter}>get data</button>}\n            {data && complate && (<CsvDownload\n                data={data}\n                filename=\"good_data.csv\"\n                style={{ //pass other props, like styles\n                    background: \"#2296f3\",\n                    backgroundColor: \"#2296f3\",\n                    borderRadius: \"6px\",\n                    display: \"inline-block\",\n                    cursor: \"pointer\", \"color\": \"#ffffff\",\n                    fontSize: \"15px\",\n                    fontWeight: \"bold\",\n                    padding: \"6px 24px\",\n                    textDecoration: \"none\",\n                    textShadow: \"0px 1px 0px #9b14b3\"\n                }}\n            >\n                Download\n            </CsvDownload>)}\n\n\n\n\n        </div>\n    );\n}","import Card from \"@material-tailwind/react/Card\";\nimport CardHeader from \"@material-tailwind/react/CardHeader\";\nimport CardBody from \"@material-tailwind/react/CardBody\";\nimport FilterDate from \"./FilterDate\";\nimport Progress from \"@material-tailwind/react/Progress\";\nimport Team1 from \"../../assets/img/team-1-800x800.jpg\";\nimport Team2 from \"../../assets/img/team-2-800x800.jpg\";\nimport Team3 from \"../../assets/img/team-3-800x800.jpg\";\nimport Team4 from \"../../assets/img/team-4-470x470.png\";\nimport React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport Filter from \"./FilterDate\";\nimport { getAllNodes, addNode, deleteNode, addSensorforNode } from \"./api\";\nimport { useQuery } from \"react-query\";\nimport ReactDeleteRow from \"react-delete-row\";\nimport axios from \"api/axios\";\n\nexport default function CardTable() {\n  const [showModal, setShowModal] = useState(false);\n  const [showModalDate, setShowModalDate] = useState(false);\n  const [showModalSensor, setShowModalSensor] = useState(false);\n\n  // const [record, setRecord] = useState([]);\n  const [node, setNode] = useState(false);\n\n  const { isLoading, error, data, isFetching } = useQuery(\n    [\"CSV\"],\n    () => getAllNodes(),\n    { keepPreviousData: true }\n  );\n\n  return (\n    <>\n      {/* <Filter/> */}\n      <Card>\n        <CardHeader color=\"blue\" contentPosition=\"none\">\n          <div className=\"flex items-center justify-between  \">\n            <h2 className=\"text-white text-2xl \">Node Table</h2>\n\n            <button\n              onClick={() => {\n                setShowModal(true);\n                setNode(\"\");\n              }}\n              class=\"bg-transparent  hover:bg-white text-white font-semibold hover:text-blue-700 py-2 px-4 border border-white hover:border-transparent rounded bg-blue-500 grow  text-grey-darkest  mx-1  inline-flex items-center\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"w-5 h-5 mr-2 fill-blue-500 hover:fill-cyan-700\"\n                // fill=\"#ffffff\"\n\n                x=\"0\"\n                y=\"0\"\n                enableBackground=\"new 0 0 16 16\"\n                version=\"1.1\"\n                viewBox=\"0 0 16 16\"\n                xmlSpace=\"preserve\"\n              >\n                <path d=\"M8 0C3.589 0 0 3.589 0 8s3.589 8 8 8 8-3.589 8-8-3.589-8-8-8zm0 14c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6z\"></path>\n                <path d=\"M9 4L7 4 7 7 4 7 4 9 7 9 7 12 9 12 9 9 12 9 12 7 9 7z\"></path>\n              </svg>\n              ADD NODE\n            </button>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <div className=\"overflow-x-auto\">\n            <table className=\"items-center w-full bg-transparent border-collapse\">\n              <thead>\n                <tr>\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                    Name\n                  </th>\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                    Attribute1\n                  </th>\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                    Attribute2\n                  </th>\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                    state\n                  </th>\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                    Action\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {isLoading && \"\"}\n\n                {error && \"\"}\n                {isFetching && \"\"}\n\n                {data &&\n                  data.Items.map((item) => {\n                    return (\n                      <tr>\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                          {item.name}\n                        </th>\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                          Attribute\n                        </th>\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                          <i className=\"fas fa-circle fa-sm text-orange-500 mr-2\"></i>{\" \"}\n                          Attribute\n                        </th>\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                          {item.GSI1PK != \"node\" ? \"used\" : \"not used\"}\n                        </th>\n                        <th className=\"flex border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                          <button\n                            onClick={() => {\n                              setShowModalSensor(true);\n                              setNode(item);\n                            }}\n                            class=\"bg-blue-500 hover:bg-blue-700  text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              x=\"0\"\n                              y=\"0\"\n                              class=\"w-5 h-5\"\n                              enableBackground=\"new 0 0 16 16\"\n                              version=\"1.1\"\n                              viewBox=\"0 0 16 16\"\n                              xmlSpace=\"preserve\"\n                            >\n                              <path d=\"M8 0C3.589 0 0 3.589 0 8s3.589 8 8 8 8-3.589 8-8-3.589-8-8-8zm0 14c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6z\"></path>\n                              <path d=\"M9 4L7 4 7 7 4 7 4 9 7 9 7 12 9 12 9 9 12 9 12 7 9 7z\"></path>\n                            </svg>\n                          </button>\n                          <button\n                            onClick={() => {\n                              setShowModal(true);\n                              setNode(item);\n                            }}\n                            class=\"bg-green-500 hover:bg-green-700  text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              class=\"w-5 h-5\"\n                              x=\"0\"\n                              y=\"0\"\n                              enableBackground=\"new 0 0 330 330\"\n                              version=\"1.1\"\n                              viewBox=\"0 0 330 330\"\n                              xmlSpace=\"preserve\"\n                            >\n                              <g>\n                                <path d=\"M75 180v60c0 8.284 6.716 15 15 15h60a15 15 0 0010.606-4.394l164.999-165c5.858-5.858 5.858-15.355 0-21.213l-60-60a14.997 14.997 0 00-21.211.001l-165 165A14.994 14.994 0 0075 180zm30 6.213l150-150L293.787 75l-150 150H105v-38.787z\"></path>\n                                <path d=\"M315 150.001c-8.284 0-15 6.716-15 15V300H30V30h135c8.284 0 15-6.716 15-15s-6.716-15-15-15H15C6.716 0 0 6.716 0 15v300c0 8.284 6.716 15 15 15h300c8.284 0 15-6.716 15-15V165.001c0-8.285-6.716-15-15-15z\"></path>\n                              </g>\n                            </svg>\n                          </button>\n                          <button\n                            onClick={() => {\n                              setShowModalDate(true);\n                              setNode(item);\n                            }}\n                            class=\"bg-green-200 hover:bg-green-700  text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width=\"20\"\n                              height=\"20\"\n                              viewBox=\"0 0 20 20\"\n                            >\n                              <path\n                                fill=\"#454242\"\n                                d=\"M5.673 0a.7.7 0 01.7.7v1.309h7.517v-1.3a.7.7 0 011.4 0v1.3H18a2 2 0 012 1.999v13.993A2 2 0 0118 20H2a2 2 0 01-2-1.999V4.008a2 2 0 012-1.999h2.973V.699a.7.7 0 01.7-.699zM1.4 7.742v10.259a.6.6 0 00.6.6h16a.6.6 0 00.6-.6V7.756L1.4 7.742zm5.267 6.877v1.666H5v-1.666h1.667zm4.166 0v1.666H9.167v-1.666h1.666zm4.167 0v1.666h-1.667v-1.666H15zm-8.333-3.977v1.666H5v-1.666h1.667zm4.166 0v1.666H9.167v-1.666h1.666zm4.167 0v1.666h-1.667v-1.666H15zM4.973 3.408H2a.6.6 0 00-.6.6v2.335l17.2.014V4.008a.6.6 0 00-.6-.6h-2.71v.929a.7.7 0 01-1.4 0v-.929H6.373v.92a.7.7 0 01-1.4 0v-.92z\"\n                              ></path>\n                            </svg>\n                          </button>\n                          <ReactDeleteRow\n                            key={item.SK}\n                            data={item}\n                            deleteElement={\n                              <button\n                                onClick={() => deleteNode(item.SK)}\n                                class=\"bg-red-400 hover:bg-red-500 text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\n                              >\n                                <svg\n                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                  class=\"w-5 h-5\"\n                                  x=\"0\"\n                                  y=\"0\"\n                                  enableBackground=\"new 0 0 348.333 348.334\"\n                                  version=\"1.1\"\n                                  viewBox=\"0 0 348.333 348.334\"\n                                  xmlSpace=\"preserve\"\n                                >\n                                  <path d=\"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\"></path>\n                                </svg>\n                              </button>\n                            }\n                            onDelete={(item) => {\n                              return window.confirm(\n                                `Are you sure you want to delete \"${item.name}\"?`\n                              );\n                            }}\n                          ></ReactDeleteRow>\n                        </th>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          </div>\n        </CardBody>\n        {showModal ? (\n          <Modal setShowModal={setShowModal}>\n            <Form item={node} setNode={setNode} setShowModal={setShowModal} />\n          </Modal>\n        ) : null}\n\n        {showModalSensor ? (\n          <Modal setShowModal={setShowModalSensor}>\n            <ScoreModale\n              nodeId={node.SK}\n\n              setShowModalSensor={setShowModalSensor}\n            />\n          </Modal>\n        ) : null}\n        {showModalDate ? (\n          <Modal setShowModal={setShowModalDate}>\n            <Filter\n              nodeId={node.SK}\n              setShowModalDate={setShowModalDate}\n            />\n          </Modal>\n        ) : null}\n\n      </Card>\n    </>\n  );\n}\n\nconst Form = (props) => {\n  const [item, setItem] = useState(props.item);\n  const changeAttr = (attr) => {\n    setItem({ ...item, ...attr });\n  };\n\n  return (\n    <form\n      class=\"px-6 pb-4 space-y-6 lg:px-8 sm:pb-6 xl:pb-8\"\n      action=\"#\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        addNode(item);\n        props.setShowModal(false);\n      }}\n    >\n      <div class=\"flex flex-wrap -mx-3 mb-6\">\n        <div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"grid-first-name\"\n          >\n            Node Name\n          </label>\n          <input\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border  rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\n            id=\"Node-Name\"\n            type=\"text\"\n            name=\"name\"\n            onChange={(e) => changeAttr({ name: e.target.value })}\n            value={item.name}\n            placeholder=\"Node Name\"\n          />\n          {/* <p class=\"text-red-500 text-xs italic\">Please fill out this field.</p> */}\n        </div>\n        <div class=\"w-full md:w-1/2 px-3\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"nodeId\"\n          >\n            nodeId\n          </label>\n          {!item.SK ? <input\n\n            onChange={(e) => changeAttr({ nodeId: e.target.value })}\n            value={item.nodeId}\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"nodeId\"\n            name=\"nodeId\"\n            type=\"text\"\n            placeholder=\"nodeId\"\n\n          /> : <label\n            class=\"block uppercase mt-4 ml-2 tracking-wide text-gray-700 text-lg font-bold mb-2\"\n            for=\"nodeId\"\n          >\n            {item.SK.split('_')[1]}\n          </label>}\n        </div>\n      </div>\n      <div class=\"flex flex-wrap -mx-3 mb-6\">\n        <div class=\"w-full px-3\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"Attribute2\"\n          >\n            Attribute2\n          </label>\n          <input\n            onChange={(e) => changeAttr({ attribute2: e.target.value })}\n            value={item.attribute2}\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"Attribute2\"\n            type=\"text\"\n            name=\"attribute2\"\n            placeholder=\"Attribute2\"\n          />\n          <p class=\"text-gray-600 text-xs italic\">\n            {/* Make it as long and as crazy as you'd like */}\n          </p>\n        </div>\n      </div>\n      <div class=\"flex flex-wrap -mx-3 mb-2\">\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"Attribute3\"\n          >\n            Attribute3\n          </label>\n          <input\n            onChange={(e) => changeAttr({ attribute3: e.target.value })}\n            value={item.attribute3}\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"Attribute3\"\n            name=\"attribute3\"\n            type=\"text\"\n            placeholder=\"Attribute3\"\n          />\n        </div>\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"Attribute4\"\n          >\n            Attribute4\n          </label>\n          <div class=\"relative\">\n            <select\n              onChange={(e) => changeAttr({ attribute4: e.target.value })}\n              value={item.attribute4}\n              name=\"attribute4\"\n              class=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n              id=\"Attribute4\"\n            >\n              <option>option 1</option>\n              <option>option 2</option>\n              <option>option 3</option>\n            </select>\n            <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n              <svg\n                class=\"fill-current h-4 w-4\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"Attribute5\"\n          >\n            Attribute5\n          </label>\n          <input\n            onChange={(e) => changeAttr({ attribute5: e.target.value })}\n            value={item.attribute5}\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"Attribute5\"\n            name=\"attribute5\"\n            type=\"text\"\n            placeholder=\"Attribute5\"\n          />\n        </div>\n      </div>\n      <div class=\"flex justify-center mt-5\">\n        <div class=\"mb-3 w-[50%]\">\n          <label\n            for=\"formFile\"\n            class=\"form-label inline-block mb-2 text-gray-700\"\n          ></label>\n          <input\n            class=\"form-control\n            \n    block\n    w-full\n    px-3\n    py-1.5\n    text-base\n    font-normal\n    text-gray-700\n    bg-white bg-clip-padding\n    border border-solid border-gray-300\n    rounded\n    transition\n    ease-in-out\n    m-0\n    focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\n            type=\"file\"\n            name=\"img\"\n            id=\"formFile\"\n            onChange={(e) => changeAttr({ img: e.target.files[0] })}\n\n          />\n        </div>\n      </div>\n      <div class=\"flex flex-wrap -mx-3 mb-2\">\n        <div class=\"w-full md:w-1/3 px-3 mb-6 mt-6 md:mb-0\">\n          <button\n            // onClick={()=>props.setShowModal(false)}\n            type=\"submit\"\n            class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nconst ScoreModale = (props) => {\n  // const [BODY, setItem] = useState(props.item);\n  const { isLoading, error, data, isFetching } = useQuery(\n    [\"sensorNotSet\"],\n    () => fetchData(),\n    { keepPreviousData: true }\n  );\n\n  const fetchData = () => {\n    return axios.get(`/api/getSensorsNotSet`).then((res) => {\n      return res.data.message;\n    });\n  };\n\n  return (\n    <>\n      {/* {isLoading && <Spinner />}\n      {error && <Spinner />}\n      {isFetching && <Spinner />} */}\n\n      <div class=\"flex   justify-between grid-cols-1 gap-4 m-5 md:grid-cols-2 md:gap-4 lg:grid-cols-3 lg:gap-4 xl:grid-cols-3 2xl:gap-4 2xl:grid-cols-3 \">\n        {data &&\n          data.Items.map((item) => {\n            return (\n              <>\n                <div class=\"flex items-center justify-center flex-col bg-blacky p-4 m-5  rounded-lg w-[90%] space-y-6\">\n                  <img\n                    class=\"rounded-full border-gray-100 shadow-sm w-24 h-24\"\n                    src={item.img}\n                    alt=\"user image\"\n                  />\n                  <h1 class=\"text-gray-50 font-semibold\">{item.name}</h1>\n\n                  <button\n                    onClick={() => {\n                      addSensorforNode({ ...item, nodeId: props.nodeId });\n                      props.setShowModalSensor(false)\n                    }}\n                    class=\"px-8 py-1 border-2  bg-yellowy rounded-full text-gray-50 font-semibold\">\n                    Add\n                  </button>\n                </div>\n              </>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\n","import StatusCard from '../../components/StatusCard';\nimport TableCard from './TableCard';\nimport React from 'react';\n\nexport default function Dashboard() {\n    return (\n        <>\n\n            \n\n            <div className=\"px-3 md:px-8 h-auto mt-20\">\n                <div className=\"container mx-auto max-w-full\">\n                    <div className=\"grid grid-cols-1 px-4 mb-16\">\n                        <TableCard />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n","import axios from \"../../api/axios\";\nimport Cookies from \"universal-cookie\";\n\nconst GET_ALL_SENSORS = \"/api/getAllUsers\";\nconst ADD_SENSOR = \"/api/createUser\";\nconst DELETE_SENSOR = \"/api/deleteUser\";\nconst ADD_NODE_FOR_USER = \"/api/addNodeforUser\";\nconst cookies = new Cookies();\n\nexport const getUsers = async () => {\n  const response = await axios.get(GET_ALL_SENSORS);\n\n  return response.data.message;\n};\n\nexport const addUser = async (body) => {\n  \n  let token = cookies.get(\"token\");\n  const response = await axios.post(ADD_SENSOR, body, {\n    headers: { \"Content-Type\": \"application/json\" ,Authorization: `Bearer ${token.accessToken}`},\n  });\n\n  return response;\n};\n\nexport const deleteUser = async (userId) => {\n    const response = await axios.delete(DELETE_SENSOR+`?PK=user&SK=${userId}`);\n    \n    return response;\n  };\n\n  export const addNodeforUser = async (body) => {\n    const response = await axios.put(ADD_NODE_FOR_USER, body, {\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n    \n    return response;\n  };","import Card from \"@material-tailwind/react/Card\";\nimport CardHeader from \"@material-tailwind/react/CardHeader\";\nimport CardBody from \"@material-tailwind/react/CardBody\";\nimport Image from \"@material-tailwind/react/Image\";\nimport Progress from \"@material-tailwind/react/Progress\";\nimport Team1 from \"../../assets/img/team-1-800x800.jpg\";\nimport Team2 from \"../../assets/img/team-2-800x800.jpg\";\nimport Team3 from \"../../assets/img/team-3-800x800.jpg\";\nimport Team4 from \"../../assets/img/team-4-470x470.png\";\nimport React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport { getUsers, addUser, deleteUser, addNodeforUser } from \"./api\";\nimport { useQuery } from \"react-query\";\nimport ReactDeleteRow from \"react-delete-row\";\nimport axios from \"api/axios\";\n\nexport default function CardTable() {\n  const [showModal, setShowModal] = useState(false);\n  const [showModalSensor, setShowModalSensor] = useState(false);\n\n  // const [record, setRecord] = useState([]);\n  const [user, setUser] = useState(false);\n  const { isLoading, error, data, isFetching } = useQuery(\n    [\"userData\"],\n    () => getUsers(),\n    { keepPreviousData: true }\n  );\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader color=\"blue\" contentPosition=\"none\">\n          <div className=\"flex items-center justify-between  \">\n            <h2 className=\"text-white text-2xl \">User Table</h2>\n\n            <button\n              onClick={() => {\n                setShowModal(true);\n                setUser(\"\");\n              }}\n              class=\"bg-transparent  hover:bg-white text-white font-semibold hover:text-blue-700 py-2 px-4 border border-white hover:border-transparent rounded bg-blue-500 grow  text-grey-darkest  mx-1  inline-flex items-center\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"w-5 h-5 mr-2 fill-blue-500 hover:fill-cyan-700\"\n                // fill=\"#ffffff\"\n\n                x=\"0\"\n                y=\"0\"\n                enableBackground=\"new 0 0 16 16\"\n                version=\"1.1\"\n                viewBox=\"0 0 16 16\"\n                xmlSpace=\"preserve\"\n              >\n                <path d=\"M8 0C3.589 0 0 3.589 0 8s3.589 8 8 8 8-3.589 8-8-3.589-8-8-8zm0 14c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6z\"></path>\n                <path d=\"M9 4L7 4 7 7 4 7 4 9 7 9 7 12 9 12 9 9 12 9 12 7 9 7z\"></path>\n              </svg>\n              ADD USER\n            </button>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <div className=\"overflow-x-auto\">\n            <table className=\"items-center w-full bg-transparent border-collapse\">\n              <thead>\n                <tr>\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                    Name\n                  </th>\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                    Email\n                  </th>\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                    Attribute2\n                  </th>\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                    state\n                  </th>\n                  <th className=\"px-2 text-purple-500 align-middle border-b border-solid border-gray-200 py-3 text-sm whitespace-nowrap font-light text-left\">\n                    Action\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {isLoading && \"\"}\n\n                {error && \"\"}\n                {isFetching && \"\"}\n\n                {data &&\n                  data.Items.map((item) => {\n                    return (\n                      <tr>\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                          {item.name}\n                        </th>\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                          {item.email}\n\n                        </th>\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                          <i className=\"fas fa-circle fa-sm text-orange-500 mr-2\"></i>{\" \"}\n                          Attribute\n                        </th>\n                        <th className=\"border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                          {item.GSI1PK != \"user\" ? \"used\" : \"not used\"}\n                        </th>\n                        <th className=\"flex border-b border-gray-200 align-middle font-light text-sm whitespace-nowrap px-2 py-4 text-left\">\n                          <button\n                            onClick={() => {\n                              setShowModalSensor(true);\n                              setUser(item);\n                            }}\n                            class=\"bg-blue-500 hover:bg-blue-700  text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              x=\"0\"\n                              y=\"0\"\n                              class=\"w-5 h-5\"\n                              enableBackground=\"new 0 0 16 16\"\n                              version=\"1.1\"\n                              viewBox=\"0 0 16 16\"\n                              xmlSpace=\"preserve\"\n                            >\n                              <path d=\"M8 0C3.589 0 0 3.589 0 8s3.589 8 8 8 8-3.589 8-8-3.589-8-8-8zm0 14c-3.309 0-6-2.691-6-6s2.691-6 6-6 6 2.691 6 6-2.691 6-6 6z\"></path>\n                              <path d=\"M9 4L7 4 7 7 4 7 4 9 7 9 7 12 9 12 9 9 12 9 12 7 9 7z\"></path>\n                            </svg>\n                          </button>\n                          <button\n                            onClick={() => {\n                              setShowModal(true);\n                              setUser(item);\n                            }}\n                            class=\"bg-green-500 hover:bg-green-700  text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              class=\"w-5 h-5\"\n                              x=\"0\"\n                              y=\"0\"\n                              enableBackground=\"new 0 0 330 330\"\n                              version=\"1.1\"\n                              viewBox=\"0 0 330 330\"\n                              xmlSpace=\"preserve\"\n                            >\n                              <g>\n                                <path d=\"M75 180v60c0 8.284 6.716 15 15 15h60a15 15 0 0010.606-4.394l164.999-165c5.858-5.858 5.858-15.355 0-21.213l-60-60a14.997 14.997 0 00-21.211.001l-165 165A14.994 14.994 0 0075 180zm30 6.213l150-150L293.787 75l-150 150H105v-38.787z\"></path>\n                                <path d=\"M315 150.001c-8.284 0-15 6.716-15 15V300H30V30h135c8.284 0 15-6.716 15-15s-6.716-15-15-15H15C6.716 0 0 6.716 0 15v300c0 8.284 6.716 15 15 15h300c8.284 0 15-6.716 15-15V165.001c0-8.285-6.716-15-15-15z\"></path>\n                              </g>\n                            </svg>\n                          </button>\n                          <ReactDeleteRow\n                            key={item.SK}\n                            data={item}\n                            deleteElement={\n                              <button\n                                onClick={() => deleteUser(item.SK)}\n                                class=\"bg-red-400 hover:bg-red-500 text-grey-darkest font-bold py-2 px-1 mx-1 rounded inline-flex items-center\"\n                              >\n                                <svg\n                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                  class=\"w-5 h-5\"\n                                  x=\"0\"\n                                  y=\"0\"\n                                  enableBackground=\"new 0 0 348.333 348.334\"\n                                  version=\"1.1\"\n                                  viewBox=\"0 0 348.333 348.334\"\n                                  xmlSpace=\"preserve\"\n                                >\n                                  <path d=\"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\"></path>\n                                </svg>\n                              </button>\n                            }\n\n                            onDelete={(item) => {\n                              return window.confirm(\n                                `Are you sure you want to delete \"${item.name}\"?`\n                              );\n                            }}\n                          ></ReactDeleteRow>\n\n                        </th>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          </div>\n        </CardBody>\n        {showModal ? (\n          <Modal setShowModal={setShowModal}>\n            <Form item={user} setUser={setUser} setShowModal={setShowModal} />\n          </Modal>\n        ) : null}\n        {showModalSensor ? (\n          <Modal setShowModal={setShowModalSensor}>\n            <ScoreModale\n              userId={user.SK}\n\n              setShowModalSensor={setShowModalSensor}\n            />\n          </Modal>\n        ) : null}\n      </Card>\n    </>\n  );\n}\n\nconst Form = (props) => {\n  const [item, setItem] = useState(props.item);\n  const changeAttr = (attr) => {\n    console.log(attr);\n    setItem({ ...item, ...attr })\n  }\n\n  return (\n    <form\n      class=\"px-6 pb-4 space-y-6 lg:px-8 sm:pb-6 xl:pb-8\"\n      action=\"#\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        addUser(item);\n        props.setShowModal(false)\n      }}\n    >\n      <div class=\"flex flex-wrap -mx-3 mb-6\">\n        <div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"grid-first-name\"\n          >\n            User Name\n          </label>\n          <input\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border  rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\n            id=\"User-Name\"\n            type=\"text\"\n            name=\"name\"\n            onChange={e => changeAttr({ name: e.target.value })}\n            value={item.name}\n            placeholder=\"User Name\"\n          />\n          {/* <p class=\"text-red-500 text-xs italic\">Please fill out this field.</p> */}\n        </div>\n        <div class=\"w-full md:w-1/2 px-3\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"email\"\n          >\n            email\n          </label>\n          <input\n            onChange={e => changeAttr({ email: e.target.value })}\n            value={item.email}\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"email\"\n            name=\"email\"\n            type=\"text\"\n            placeholder=\"email\"\n          />\n        </div>\n      </div>\n      <div class=\"flex flex-wrap -mx-3 mb-6\">\n        <div class=\"w-full px-3\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"Attribute2\"\n          >\n            Attribute2\n          </label>\n          <input\n            onChange={e => changeAttr({ attribute2: e.target.value })}\n            value={item.attribute2}\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"Attribute2\"\n            type=\"text\"\n            name=\"attribute2\"\n            placeholder=\"Attribute2\"\n          />\n          <p class=\"text-gray-600 text-xs italic\">\n            {/* Make it as long and as crazy as you'd like */}\n          </p>\n        </div>\n      </div>\n      <div class=\"flex flex-wrap -mx-3 mb-2\">\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"Attribute3\"\n          >\n            Attribute3\n          </label>\n          <input\n            onChange={e => changeAttr({ attribute3: e.target.value })}\n\n            value={item.attribute3}\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"Attribute3\"\n            name=\"attribute3\"\n            type=\"text\"\n            placeholder=\"Attribute3\"\n          />\n        </div>\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"Attribute4\"\n          >\n            Attribute4\n          </label>\n          <div class=\"relative\">\n            <select\n              onChange={e => changeAttr({ attribute4: e.target.value })}\n\n              value={item.attribute4}\n              name=\"attribute4\"\n              class=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n              id=\"Attribute4\"\n            >\n              <option>option 1</option>\n              <option>option 2</option>\n              <option>option 3</option>\n            </select>\n            <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n              <svg\n                class=\"fill-current h-4 w-4\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n              >\n                <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"Attribute5\"\n          >\n            Attribute5\n          </label>\n          <input\n            onChange={e => changeAttr({ attribute5: e.target.value })}\n\n            value={item.attribute5}\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"Attribute5\"\n            name=\"attribute5\"\n            type=\"text\"\n            placeholder=\"Attribute5\"\n          />\n        </div>\n      </div>\n      <div class=\"flex flex-wrap -mx-3 mb-2\">\n        <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n\n          <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold \">\n            <input\n              className=\"mx-4\"\n              type=\"checkbox\"\n              checked={item.dfNode}\n              onChange={e => changeAttr({ dfNode: e.target.checked })}\n            />\n            defulte Node\n          </label>\n        </div>\n        {item.dfNode ? <> <div class=\"w-full md:w-1/3 px-3 mb-6 md:mb-0\">\n          <label\n            class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            for=\"countNodes\"\n          >\n            count for nodes\n          </label>\n          <input\n            onChange={e => changeAttr({ countNodes: e.target.value })}\n\n            value={item.countNodes}\n            class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"countNodes\"\n            name=\"countNodes\"\n            type=\"countNodes\"\n            placeholder=\"countNodes\"\n          />\n        </div>\n        </> : null}\n\n\n\n      </div>\n      <div class=\"flex flex-wrap -mx-3 mb-2\">\n        <div class=\"w-full md:w-1/3 px-3 mb-6 mt-6 md:mb-0\">\n          <button\n            // onClick={()=>props.setShowModal(false)}\n            type=\"submit\"\n            class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nconst ScoreModale = (props) => {\n  // const [BODY, setItem] = useState(props.item);\n\n  const { isLoading, error, data, isFetching } = useQuery(\n    [\"sensorNotSet\"],\n    () => fetchData(),\n    { keepPreviousData: true }\n  );\n\n  const fetchData = () => {\n    return axios.get(`/api/getNodesNotSet`).then((res) => {\n      return res.data.message;\n    });\n  };\n\n  return (\n    <>\n      {/* {isLoading && <Spinner />}\n      {error && <Spinner />}\n      {isFetching && <Spinner />} */}\n\n      <div class=\"flex   justify-between grid-cols-1 gap-4 m-5 md:grid-cols-2 md:gap-4 lg:grid-cols-3 lg:gap-4 xl:grid-cols-3 2xl:gap-4 2xl:grid-cols-3 \">\n        {data &&\n          data.Items.map((item) => {\n            return (\n              <>\n                <div class=\"flex items-center justify-center flex-col bg-blacky p-4 m-5  rounded-lg w-[90%] space-y-6\">\n                  <img\n                    class=\"rounded-full border-gray-100 shadow-sm w-24 h-24\"\n                    src={item.img}\n                    alt=\"user image\"\n                  />\n                  <h1 class=\"text-gray-50 font-semibold\">{item.name}</h1>\n\n                  <button\n                    onClick={() => {\n                      addNodeforUser({ ...item, userId: props.userId });\n                      props.setShowModalSensor(false)\n                    }}\n                    class=\"px-8 py-1 border-2  bg-yellowy rounded-full text-gray-50 font-semibold\">\n                    Add\n                  </button>\n                </div>\n              </>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n","import StatusCard from '../../components/StatusCard';\nimport TableCard from './TableCard';\nimport React from 'react';\n\nexport default function Dashboard() {\n    return (\n        <>\n            \n\n            <div className=\"px-3 md:px-8 h-auto mt-20\">\n                <div className=\"container mx-auto max-w-full\">\n                    <div className=\"grid grid-cols-1 px-4 mb-16\">\n                        <TableCard />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n","import axios from \"../api/axios\";\nimport React from \"react\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n\nconst LOGIN_URL = \"/auth/LoginAdmin\";\n\nexport default function Login() {\n  const [err, setErr] = React.useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const body = {\n      email: e.target.email.value,\n      password: e.target.password.value,\n    };\n\n      await axios.post(LOGIN_URL, body, {\n        headers: { \"Content-Type\": \"application/json\" },\n      }).then(response => {\n        const value = { accessToken: response?.data?.message?.jwt, userData: response?.data?.message?.userData };\n        cookies.set(\"token\", value, { path: \"/\" });\n        window.location.reload(false);\n      }).catch(err =>{\n          setErr(err.response?.data.message)\n\n      })\n  };\n  return (\n    <>\n      <main>\n        <section className=\"absolute w-full h-full\">\n          <div\n            className=\"absolute top-0 w-full h-full bg-gray-900\"\n            style={{\n              backgroundImage:\n                \"url(\" +\n                require(\"../assets/img/register_bg_2.png\").default +\n                \")\",\n              backgroundSize: \"100%\",\n              backgroundRepeat: \"no-repeat\",\n            }}\n          ></div>\n          <div className=\"container mx-auto px-4 h-full\">\n            <div className=\"flex content-center items-center justify-center h-full\">\n              <div className=\"w-full lg:w-4/12 px-4\">\n                <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-gray-300 border-0\">\n                  <div className=\"rounded-t mb-0 px-6 py-6\">\n                    <div className=\"text-center mb-3\">\n                      <h6 className=\"text-gray-600 text-2xl font-bold\">\n                        Sign in\n                      </h6>\n                    </div>\n                    <hr className=\"mt-6 border-b-1 border-gray-400\" />\n                  </div>\n                  <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\n                    <form onSubmit={handleSubmit}>\n                      <div className=\"relative w-full mb-3\">\n                        <label\n                          className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                          htmlFor=\"grid-password\"\n                        >\n                          Email\n                        </label>\n                        <input\n                          name=\"email\"\n                          type=\"text\"\n                          className=\"border-0 px-3 py-3 placeholder-gray-400 text-gray-700 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full\"\n                          placeholder=\"Email\"\n                          style={{ transition: \"all .15s ease\" }}\n                        />\n                      </div>\n\n                      <div className=\"relative w-full mb-3\">\n                        <label\n                          className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                          htmlFor=\"grid-password\"\n                        >\n                          Password\n                        </label>\n                        <input\n                          type=\"password\"\n                          name=\"password\"\n                          id=\"password\"\n                          className=\"border-0 px-3 py-3 placeholder-gray-400 text-gray-700 bg-white rounded text-sm shadow focus:outline-none focus:ring w-full\"\n                          placeholder=\"Password\"\n                          style={{ transition: \"all .15s ease\" }}\n                        />\n                      </div>\n                      <div className=\"text-red-500 text-xl text-center\">{err}</div>\n                      <div className=\"text-center mt-6\">\n                        <button\n                          className=\"bg-gray-900 text-white active:bg-gray-700 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 w-full\"\n                          type=\"submit\"\n                          style={{ transition: \"all .15s ease\" }}\n                        >\n                          Sign In\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n                {/* <div className=\"flex flex-wrap mt-6\">\n                  <div className=\"w-1/2\">\n                    <a\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      className=\"text-gray-300\"\n                    >\n                      <small>Forgot password?</small>\n                    </a>\n                  </div>\n                  <div className=\"w-1/2 text-right\">\n                    <a\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                      className=\"text-gray-300\"\n                    >\n                      <small>Create new account</small>\n                    </a>\n                  </div>\n                </div> */}\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n    </>\n  );\n}\n","import {\n  Navigate,Outlet\n\n} from 'react-router-dom';\n\nfunction PrivateRoute({ children, isAuthenticated, ...rest }) {\n  return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" />;\n}\n\nexport default PrivateRoute;","import {\n  Navigate,Outlet\n\n} from 'react-router-dom';\n\nfunction PublicRoute({ children, isAuthenticated, ...rest }) {\n  return !isAuthenticated ? <Outlet /> : <Navigate to=\"/\" />;\n}\n\nexport default PublicRoute;","import { Routes, Route, Navigate } from \"react-router-dom\";\nimport Sidebar from \"./components/Sidebar\";\nimport Dashboard from \"./pages/dashboard/Dashboard\";\nimport Settings from \"./pages/Settings\";\nimport Tables from \"./pages/Tables\";\nimport Sensor from \"./pages/sensor/Tables\";\nimport Node from \"./pages/node/Tables\";\nimport User from \"./pages/user/Tables\";\nimport Maps from \"./pages/Maps\";\nimport React, { useState } from \"react\";\n\nimport Footer from \"./components/Footer\";\n\n// Tailwind CSS Style Sheet\nimport \"./assets/styles/tailwind.css\";\nimport Login from \"./pages/Login\";\nimport Cookies from \"universal-cookie\";\nimport axios from \"./api/axios\";\nimport { useQuery } from \"react-query\";\nimport ProfileCard from \"components/ProfileCard\";\nimport PrivateRoute from \"components/PrivateRoute\";\nimport PublicRoute from \"components/PublicRoute\";\n\nconst cookies = new Cookies();\nconst VALIDATE_TOKEN_URL = \"/api/ValidateTokenAdmin\";\n\nconst App = () => {\n  const [isLogin, setIsLogin] = useState(false);\n  const { isLoading, error, data, isFetching } = useQuery(\n    [\"isLogin\"],\n    () => isAuth(),\n    { keepPreviousData: true }\n  );\n  const isAuth = async () => {\n    let token = cookies.get(\"token\");\n    if (token) {\n      try {\n        const res = await axios.get(VALIDATE_TOKEN_URL, {\n          headers: { Authorization: `Bearer ${token.accessToken}` },\n        });\n\n        if (res.data?.status) {\n          setIsLogin(res.data?.status);\n          return res.data.status;\n        } else {\n          cookies.remove(\"token\");\n          setIsLogin(false);\n        }\n      } catch (err) {\n        cookies.remove(\"token\");\n        setIsLogin(false);\n      }\n    } else {\n      cookies.remove(\"token\");\n      setIsLogin(false);\n    }\n  };\n\n  return (\n    <>\n      {/* {isLoading && \"isLoading\"}\n      {error && \"error\"}\n      {isFetching && \"isFetching\"} */}\n      {!isLogin ? (\n        <Routes>\n          <Route exact element={<PublicRoute isAuthenticated={isLogin} />}>\n            <Route exact path=\"/login\" element={<Login />} />\n            <Route path=\"/\" element={<Navigate to=\"/login\" />} />\n            <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n\n          </Route>\n        </Routes>\n      ) : (\n        <>\n          <Sidebar />\n          <div className=\"md:ml-64\">\n            <Routes>\n              <Route exact element={<PrivateRoute isAuthenticated={isLogin} />}>\n                <Route path=\"/sensors\" element={<Sensor />} />\n              </Route>\n              <Route exact element={<PrivateRoute isAuthenticated={isLogin} />}>\n                <Route path=\"/nodes\" element={<Node />} />\n              </Route>\n              <Route exact element={<PrivateRoute isAuthenticated={isLogin} />}>\n                <Route path=\"/\" element={<Dashboard />} />\n              </Route>\n              <Route exact element={<PrivateRoute isAuthenticated={isLogin} />}>\n                <Route path=\"/users\" element={<User />} />\n              </Route>\n              <Route path=\"*\" element={<Navigate to=\"/\" />} />\n            </Routes>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\n\nconst queryClient = new QueryClient();\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 80;"],"sourceRoot":""}